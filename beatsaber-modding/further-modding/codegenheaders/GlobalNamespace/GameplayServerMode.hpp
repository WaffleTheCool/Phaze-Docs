// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GameplayServerMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct GameplayServerMode/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: GameplayServerMode
    constexpr GameplayServerMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GameplayServerMode Countdown
    static constexpr const int Countdown = 0;
    // Get static field: static public GameplayServerMode Countdown
    static GlobalNamespace::GameplayServerMode _get_Countdown();
    // Set static field: static public GameplayServerMode Countdown
    static void _set_Countdown(GlobalNamespace::GameplayServerMode value);
    // static field const value: static public GameplayServerMode Managed
    static constexpr const int Managed = 1;
    // Get static field: static public GameplayServerMode Managed
    static GlobalNamespace::GameplayServerMode _get_Managed();
    // Set static field: static public GameplayServerMode Managed
    static void _set_Managed(GlobalNamespace::GameplayServerMode value);
    // static field const value: static public GameplayServerMode QuickStartOneSong
    static constexpr const int QuickStartOneSong = 2;
    // Get static field: static public GameplayServerMode QuickStartOneSong
    static GlobalNamespace::GameplayServerMode _get_QuickStartOneSong();
    // Set static field: static public GameplayServerMode QuickStartOneSong
    static void _set_QuickStartOneSong(GlobalNamespace::GameplayServerMode value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // GameplayServerMode
  #pragma pack(pop)
  static check_size<sizeof(GameplayServerMode), 0 + sizeof(int)> __GlobalNamespace_GameplayServerModeSizeCheck;
  static_assert(sizeof(GameplayServerMode) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameplayServerMode, "", "GameplayServerMode");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
