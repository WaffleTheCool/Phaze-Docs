// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: SongPackMaskModelSO/SongPackDataType
  // [TokenAttribute] Offset: FFFFFFFF
  struct SongPackMaskModelSO::SongPackDataType/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: SongPackDataType
    constexpr SongPackDataType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
    static constexpr const int SingleBeatmapLevelPack = 0;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_SingleBeatmapLevelPack();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
    static void _set_SingleBeatmapLevelPack(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // static field const value: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
    static constexpr const int MultipleBeatmapLevelPacks = 1;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_MultipleBeatmapLevelPacks();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
    static void _set_MultipleBeatmapLevelPacks(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // static field const value: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
    static constexpr const int SinglePreviewBeatmapLevelPack = 2;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_SinglePreviewBeatmapLevelPack();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
    static void _set_SinglePreviewBeatmapLevelPack(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // static field const value: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
    static constexpr const int MultiplePreviewBeatmapLevelPacks = 3;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_MultiplePreviewBeatmapLevelPacks();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
    static void _set_MultiplePreviewBeatmapLevelPacks(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // static field const value: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
    static constexpr const int SingleBeatmapLevelPackCollection = 4;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_SingleBeatmapLevelPackCollection();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
    static void _set_SingleBeatmapLevelPackCollection(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // static field const value: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
    static constexpr const int MultipleBeatmapLevelPackCollections = 5;
    // Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
    static GlobalNamespace::SongPackMaskModelSO::SongPackDataType _get_MultipleBeatmapLevelPackCollections();
    // Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
    static void _set_MultipleBeatmapLevelPackCollections(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // SongPackMaskModelSO/SongPackDataType
  #pragma pack(pop)
  static check_size<sizeof(SongPackMaskModelSO::SongPackDataType), 0 + sizeof(int)> __GlobalNamespace_SongPackMaskModelSO_SongPackDataTypeSizeCheck;
  static_assert(sizeof(SongPackMaskModelSO::SongPackDataType) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPackMaskModelSO::SongPackDataType, "", "SongPackMaskModelSO/SongPackDataType");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
