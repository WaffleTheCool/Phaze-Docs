// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization::Formatters::Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Forward declaring type: InternalFE
  class InternalFE;
  // Forward declaring type: SerObjectInfoInit
  class SerObjectInfoInit;
  // Forward declaring type: SerStack
  class SerStack;
  // Forward declaring type: IntSizedArray
  class IntSizedArray;
  // Forward declaring type: NameCache
  class NameCache;
  // Forward declaring type: __BinaryParser
  class __BinaryParser;
  // Forward declaring type: ReadObjectInfo
  class ReadObjectInfo;
  // Forward declaring type: ParseRecord
  class ParseRecord;
  // Forward declaring type: BinaryAssemblyInfo
  class BinaryAssemblyInfo;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: ISurrogateSelector
  class ISurrogateSelector;
  // Forward declaring type: ObjectManager
  class ObjectManager;
  // Forward declaring type: SerializationBinder
  class SerializationBinder;
  // Forward declaring type: IFormatterConverter
  class IFormatterConverter;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: Header
  class Header;
  // Forward declaring type: HeaderHandler
  class HeaderHandler;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
  // Forward declaring type: AssemblyName
  class AssemblyName;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization.Formatters.Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.Formatters.Binary.ObjectReader
  // [TokenAttribute] Offset: FFFFFFFF
  class ObjectReader : public ::Il2CppObject {
    public:
    // Nested type: System::Runtime::Serialization::Formatters::Binary::ObjectReader::TypeNAssembly
    class TypeNAssembly;
    // Nested type: System::Runtime::Serialization::Formatters::Binary::ObjectReader::TopLevelAssemblyTypeResolver
    class TopLevelAssemblyTypeResolver;
    // System.IO.Stream m_stream
    // Size: 0x8
    // Offset: 0x10
    System::IO::Stream* m_stream;
    // Field size check
    static_assert(sizeof(System::IO::Stream*) == 0x8);
    // System.Runtime.Serialization.ISurrogateSelector m_surrogates
    // Size: 0x8
    // Offset: 0x18
    System::Runtime::Serialization::ISurrogateSelector* m_surrogates;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::ISurrogateSelector*) == 0x8);
    // System.Runtime.Serialization.StreamingContext m_context
    // Size: 0xC
    // Offset: 0x20
    System::Runtime::Serialization::StreamingContext m_context;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::StreamingContext) == 0xC);
    // Padding between fields: m_context and: m_objectManager
    char __padding2[0x4] = {};
    // System.Runtime.Serialization.ObjectManager m_objectManager
    // Size: 0x8
    // Offset: 0x30
    System::Runtime::Serialization::ObjectManager* m_objectManager;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::ObjectManager*) == 0x8);
    // System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums
    // Size: 0x8
    // Offset: 0x38
    System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::InternalFE*) == 0x8);
    // System.Runtime.Serialization.SerializationBinder m_binder
    // Size: 0x8
    // Offset: 0x40
    System::Runtime::Serialization::SerializationBinder* m_binder;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::SerializationBinder*) == 0x8);
    // System.Int64 topId
    // Size: 0x8
    // Offset: 0x48
    int64_t topId;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // System.Boolean bSimpleAssembly
    // Size: 0x1
    // Offset: 0x50
    bool bSimpleAssembly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bSimpleAssembly and: handlerObject
    char __padding7[0x7] = {};
    // System.Object handlerObject
    // Size: 0x8
    // Offset: 0x58
    ::Il2CppObject* handlerObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Object m_topObject
    // Size: 0x8
    // Offset: 0x60
    ::Il2CppObject* m_topObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.Runtime.Remoting.Messaging.Header[] headers
    // Size: 0x8
    // Offset: 0x68
    ::Array<System::Runtime::Remoting::Messaging::Header*>* headers;
    // Field size check
    static_assert(sizeof(::Array<System::Runtime::Remoting::Messaging::Header*>*) == 0x8);
    // System.Runtime.Remoting.Messaging.HeaderHandler handler
    // Size: 0x8
    // Offset: 0x70
    System::Runtime::Remoting::Messaging::HeaderHandler* handler;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Messaging::HeaderHandler*) == 0x8);
    // System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit
    // Size: 0x8
    // Offset: 0x78
    System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*) == 0x8);
    // System.Runtime.Serialization.IFormatterConverter m_formatterConverter
    // Size: 0x8
    // Offset: 0x80
    System::Runtime::Serialization::IFormatterConverter* m_formatterConverter;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::IFormatterConverter*) == 0x8);
    // System.Runtime.Serialization.Formatters.Binary.SerStack stack
    // Size: 0x8
    // Offset: 0x88
    System::Runtime::Serialization::Formatters::Binary::SerStack* stack;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::SerStack*) == 0x8);
    // private System.Runtime.Serialization.Formatters.Binary.SerStack valueFixupStack
    // Size: 0x8
    // Offset: 0x90
    System::Runtime::Serialization::Formatters::Binary::SerStack* valueFixupStack;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::SerStack*) == 0x8);
    // System.Object[] crossAppDomainArray
    // Size: 0x8
    // Offset: 0x98
    ::Array<::Il2CppObject*>* crossAppDomainArray;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppObject*>*) == 0x8);
    // private System.Boolean bFullDeserialization
    // Size: 0x1
    // Offset: 0xA0
    bool bFullDeserialization;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean bOldFormatDetected
    // Size: 0x1
    // Offset: 0xA1
    bool bOldFormatDetected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bOldFormatDetected and: valTypeObjectIdTable
    char __padding18[0x6] = {};
    // private System.Runtime.Serialization.Formatters.Binary.IntSizedArray valTypeObjectIdTable
    // Size: 0x8
    // Offset: 0xA8
    System::Runtime::Serialization::Formatters::Binary::IntSizedArray* valTypeObjectIdTable;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::IntSizedArray*) == 0x8);
    // private System.Runtime.Serialization.Formatters.Binary.NameCache typeCache
    // Size: 0x8
    // Offset: 0xB0
    System::Runtime::Serialization::Formatters::Binary::NameCache* typeCache;
    // Field size check
    static_assert(sizeof(System::Runtime::Serialization::Formatters::Binary::NameCache*) == 0x8);
    // private System.String previousAssemblyString
    // Size: 0x8
    // Offset: 0xB8
    ::Il2CppString* previousAssemblyString;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String previousName
    // Size: 0x8
    // Offset: 0xC0
    ::Il2CppString* previousName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Type previousType
    // Size: 0x8
    // Offset: 0xC8
    System::Type* previousType;
    // Field size check
    static_assert(sizeof(System::Type*) == 0x8);
    // Creating value type constructor for type: ObjectReader
    ObjectReader(System::IO::Stream* m_stream_ = {}, System::Runtime::Serialization::ISurrogateSelector* m_surrogates_ = {}, System::Runtime::Serialization::StreamingContext m_context_ = {}, System::Runtime::Serialization::ObjectManager* m_objectManager_ = {}, System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums_ = {}, System::Runtime::Serialization::SerializationBinder* m_binder_ = {}, int64_t topId_ = {}, bool bSimpleAssembly_ = {}, ::Il2CppObject* handlerObject_ = {}, ::Il2CppObject* m_topObject_ = {}, ::Array<System::Runtime::Remoting::Messaging::Header*>* headers_ = {}, System::Runtime::Remoting::Messaging::HeaderHandler* handler_ = {}, System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit_ = {}, System::Runtime::Serialization::IFormatterConverter* m_formatterConverter_ = {}, System::Runtime::Serialization::Formatters::Binary::SerStack* stack_ = {}, System::Runtime::Serialization::Formatters::Binary::SerStack* valueFixupStack_ = {}, ::Array<::Il2CppObject*>* crossAppDomainArray_ = {}, bool bFullDeserialization_ = {}, bool bOldFormatDetected_ = {}, System::Runtime::Serialization::Formatters::Binary::IntSizedArray* valTypeObjectIdTable_ = {}, System::Runtime::Serialization::Formatters::Binary::NameCache* typeCache_ = {}, ::Il2CppString* previousAssemblyString_ = {}, ::Il2CppString* previousName_ = {}, System::Type* previousType_ = {}) noexcept : m_stream{m_stream_}, m_surrogates{m_surrogates_}, m_context{m_context_}, m_objectManager{m_objectManager_}, formatterEnums{formatterEnums_}, m_binder{m_binder_}, topId{topId_}, bSimpleAssembly{bSimpleAssembly_}, handlerObject{handlerObject_}, m_topObject{m_topObject_}, headers{headers_}, handler{handler_}, serObjectInfoInit{serObjectInfoInit_}, m_formatterConverter{m_formatterConverter_}, stack{stack_}, valueFixupStack{valueFixupStack_}, crossAppDomainArray{crossAppDomainArray_}, bFullDeserialization{bFullDeserialization_}, bOldFormatDetected{bOldFormatDetected_}, valTypeObjectIdTable{valTypeObjectIdTable_}, typeCache{typeCache_}, previousAssemblyString{previousAssemblyString_}, previousName{previousName_}, previousType{previousType_} {}
    // Get instance field reference: System.IO.Stream m_stream
    System::IO::Stream*& dyn_m_stream();
    // Get instance field reference: System.Runtime.Serialization.ISurrogateSelector m_surrogates
    System::Runtime::Serialization::ISurrogateSelector*& dyn_m_surrogates();
    // Get instance field reference: System.Runtime.Serialization.StreamingContext m_context
    System::Runtime::Serialization::StreamingContext& dyn_m_context();
    // Get instance field reference: System.Runtime.Serialization.ObjectManager m_objectManager
    System::Runtime::Serialization::ObjectManager*& dyn_m_objectManager();
    // Get instance field reference: System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums
    System::Runtime::Serialization::Formatters::Binary::InternalFE*& dyn_formatterEnums();
    // Get instance field reference: System.Runtime.Serialization.SerializationBinder m_binder
    System::Runtime::Serialization::SerializationBinder*& dyn_m_binder();
    // Get instance field reference: System.Int64 topId
    int64_t& dyn_topId();
    // Get instance field reference: System.Boolean bSimpleAssembly
    bool& dyn_bSimpleAssembly();
    // Get instance field reference: System.Object handlerObject
    ::Il2CppObject*& dyn_handlerObject();
    // Get instance field reference: System.Object m_topObject
    ::Il2CppObject*& dyn_m_topObject();
    // Get instance field reference: System.Runtime.Remoting.Messaging.Header[] headers
    ::Array<System::Runtime::Remoting::Messaging::Header*>*& dyn_headers();
    // Get instance field reference: System.Runtime.Remoting.Messaging.HeaderHandler handler
    System::Runtime::Remoting::Messaging::HeaderHandler*& dyn_handler();
    // Get instance field reference: System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit
    System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*& dyn_serObjectInfoInit();
    // Get instance field reference: System.Runtime.Serialization.IFormatterConverter m_formatterConverter
    System::Runtime::Serialization::IFormatterConverter*& dyn_m_formatterConverter();
    // Get instance field reference: System.Runtime.Serialization.Formatters.Binary.SerStack stack
    System::Runtime::Serialization::Formatters::Binary::SerStack*& dyn_stack();
    // Get instance field reference: private System.Runtime.Serialization.Formatters.Binary.SerStack valueFixupStack
    System::Runtime::Serialization::Formatters::Binary::SerStack*& dyn_valueFixupStack();
    // Get instance field reference: System.Object[] crossAppDomainArray
    ::Array<::Il2CppObject*>*& dyn_crossAppDomainArray();
    // Get instance field reference: private System.Boolean bFullDeserialization
    bool& dyn_bFullDeserialization();
    // Get instance field reference: private System.Boolean bOldFormatDetected
    bool& dyn_bOldFormatDetected();
    // Get instance field reference: private System.Runtime.Serialization.Formatters.Binary.IntSizedArray valTypeObjectIdTable
    System::Runtime::Serialization::Formatters::Binary::IntSizedArray*& dyn_valTypeObjectIdTable();
    // Get instance field reference: private System.Runtime.Serialization.Formatters.Binary.NameCache typeCache
    System::Runtime::Serialization::Formatters::Binary::NameCache*& dyn_typeCache();
    // Get instance field reference: private System.String previousAssemblyString
    ::Il2CppString*& dyn_previousAssemblyString();
    // Get instance field reference: private System.String previousName
    ::Il2CppString*& dyn_previousName();
    // Get instance field reference: private System.Type previousType
    System::Type*& dyn_previousType();
    // private System.Runtime.Serialization.Formatters.Binary.SerStack get_ValueFixupStack()
    // Offset: 0x1622294
    System::Runtime::Serialization::Formatters::Binary::SerStack* get_ValueFixupStack();
    // System.Object get_TopObject()
    // Offset: 0x1622384
    ::Il2CppObject* get_TopObject();
    // System.Void set_TopObject(System.Object value)
    // Offset: 0x162238C
    void set_TopObject(::Il2CppObject* value);
    // System.Void .ctor(System.IO.Stream stream, System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums, System.Runtime.Serialization.SerializationBinder binder)
    // Offset: 0x161CE90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectReader* New_ctor(System::IO::Stream* stream, System::Runtime::Serialization::ISurrogateSelector* selector, System::Runtime::Serialization::StreamingContext context, System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums, System::Runtime::Serialization::SerializationBinder* binder) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectReader*, creationType>(stream, selector, context, formatterEnums, binder)));
    }
    // System.Object Deserialize(System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Serialization.Formatters.Binary.__BinaryParser serParser, System.Boolean fCheck)
    // Offset: 0x161D07C
    ::Il2CppObject* Deserialize(System::Runtime::Remoting::Messaging::HeaderHandler* handler, System::Runtime::Serialization::Formatters::Binary::__BinaryParser* serParser, bool fCheck);
    // private System.Boolean HasSurrogate(System.Type t)
    // Offset: 0x16229F0
    bool HasSurrogate(System::Type* t);
    // private System.Void CheckSerializable(System.Type t)
    // Offset: 0x1622ADC
    void CheckSerializable(System::Type* t);
    // private System.Void InitFullDeserialization()
    // Offset: 0x1622C48
    void InitFullDeserialization();
    // System.Object CrossAppDomainArray(System.Int32 index)
    // Offset: 0x1622D2C
    ::Il2CppObject* CrossAppDomainArray(int index);
    // System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType)
    // Offset: 0x16211A8
    System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(System::Type* objectType);
    // System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType, System.String[] memberNames, System.Type[] memberTypes)
    // Offset: 0x1621A18
    System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(System::Type* objectType, ::Array<::Il2CppString*>* memberNames, ::Array<System::Type*>* memberTypes);
    // System.Void Parse(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1622EA4
    void Parse(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseError(System.Runtime.Serialization.Formatters.Binary.ParseRecord processing, System.Runtime.Serialization.Formatters.Binary.ParseRecord onStack)
    // Offset: 0x1623B44
    void ParseError(System::Runtime::Serialization::Formatters::Binary::ParseRecord* processing, System::Runtime::Serialization::Formatters::Binary::ParseRecord* onStack);
    // private System.Void ParseSerializedStreamHeader(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x162304C
    void ParseSerializedStreamHeader(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseSerializedStreamHeaderEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1623064
    void ParseSerializedStreamHeaderEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseObject(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x162307C
    void ParseObject(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseObjectEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1623370
    void ParseObjectEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArray(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1623EC0
    void ParseArray(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void NextRectangleMap(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x162493C
    void NextRectangleMap(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArrayMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1624A1C
    void ParseArrayMember(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArrayMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1625694
    void ParseArrayMemberEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1623590
    void ParseMember(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0x1623A70
    void ParseMemberEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseString(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord parentPr)
    // Offset: 0x16251F4
    void ParseString(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* parentPr);
    // private System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr)
    // Offset: 0x162455C
    void RegisterObject(::Il2CppObject* obj, System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr);
    // private System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr, System.Boolean bIsString)
    // Offset: 0x16259F0
    void RegisterObject(::Il2CppObject* obj, System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr, bool bIsString);
    // System.Int64 GetId(System.Int64 objectId)
    // Offset: 0x1625CF8
    int64_t GetId(int64_t objectId);
    // System.Type Bind(System.String assemblyString, System.String typeString)
    // Offset: 0x1625DE4
    System::Type* Bind(::Il2CppString* assemblyString, ::Il2CppString* typeString);
    // System.Type FastBindToType(System.String assemblyName, System.String typeName)
    // Offset: 0x1625E4C
    System::Type* FastBindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName);
    // static private System.Reflection.Assembly ResolveSimpleAssemblyName(System.Reflection.AssemblyName assemblyName)
    // Offset: 0x1626124
    static System::Reflection::Assembly* ResolveSimpleAssemblyName(System::Reflection::AssemblyName* assemblyName);
    // static private System.Void GetSimplyNamedTypeFromAssembly(System.Reflection.Assembly assm, System.String typeName, ref System.Type type)
    // Offset: 0x1626190
    static void GetSimplyNamedTypeFromAssembly(System::Reflection::Assembly* assm, ::Il2CppString* typeName, ByRef<System::Type*> type);
    // System.Type GetType(System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo assemblyInfo, System.String name)
    // Offset: 0x161C8B0
    System::Type* GetType(System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo, ::Il2CppString* name);
    // static private System.Void CheckTypeForwardedTo(System.Reflection.Assembly sourceAssembly, System.Reflection.Assembly destAssembly, System.Type resolvedType)
    // Offset: 0x16263B0
    static void CheckTypeForwardedTo(System::Reflection::Assembly* sourceAssembly, System::Reflection::Assembly* destAssembly, System::Type* resolvedType);
  }; // System.Runtime.Serialization.Formatters.Binary.ObjectReader
  #pragma pack(pop)
  static check_size<sizeof(ObjectReader), 200 + sizeof(System::Type*)> __System_Runtime_Serialization_Formatters_Binary_ObjectReaderSizeCheck;
  static_assert(sizeof(ObjectReader) == 0xD0);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::Formatters::Binary::ObjectReader*, "System.Runtime.Serialization.Formatters.Binary", "ObjectReader");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::get_ValueFixupStack
// Il2CppName: get_ValueFixupStack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::SerStack* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)()>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::get_ValueFixupStack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "get_ValueFixupStack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::get_TopObject
// Il2CppName: get_TopObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)()>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::get_TopObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "get_TopObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::set_TopObject
// Il2CppName: set_TopObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(::Il2CppObject*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::set_TopObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "set_TopObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Remoting::Messaging::HeaderHandler*, System::Runtime::Serialization::Formatters::Binary::__BinaryParser*, bool)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::Deserialize)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "HeaderHandler")->byval_arg;
    static auto* serParser = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "__BinaryParser")->byval_arg;
    static auto* fCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler, serParser, fCheck});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::HasSurrogate
// Il2CppName: HasSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Type*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::HasSurrogate)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "HasSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::CheckSerializable
// Il2CppName: CheckSerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Type*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::CheckSerializable)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "CheckSerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::InitFullDeserialization
// Il2CppName: InitFullDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)()>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::InitFullDeserialization)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "InitFullDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::CrossAppDomainArray
// Il2CppName: CrossAppDomainArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(int)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::CrossAppDomainArray)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "CrossAppDomainArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::CreateReadObjectInfo
// Il2CppName: CreateReadObjectInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Type*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::CreateReadObjectInfo)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "CreateReadObjectInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::CreateReadObjectInfo
// Il2CppName: CreateReadObjectInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Type*, ::Array<::Il2CppString*>*, ::Array<System::Type*>*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::CreateReadObjectInfo)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* memberNames = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* memberTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "CreateReadObjectInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType, memberNames, memberTypes});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::Parse)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseError
// Il2CppName: ParseError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseError)> {
  static const MethodInfo* get() {
    static auto* processing = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    static auto* onStack = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{processing, onStack});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseSerializedStreamHeader
// Il2CppName: ParseSerializedStreamHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseSerializedStreamHeader)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseSerializedStreamHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseSerializedStreamHeaderEnd
// Il2CppName: ParseSerializedStreamHeaderEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseSerializedStreamHeaderEnd)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseSerializedStreamHeaderEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseObject
// Il2CppName: ParseObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseObject)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseObjectEnd
// Il2CppName: ParseObjectEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseObjectEnd)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseObjectEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArray
// Il2CppName: ParseArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArray)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::NextRectangleMap
// Il2CppName: NextRectangleMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::NextRectangleMap)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "NextRectangleMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArrayMember
// Il2CppName: ParseArrayMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArrayMember)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseArrayMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArrayMemberEnd
// Il2CppName: ParseArrayMemberEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseArrayMemberEnd)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseArrayMemberEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseMember
// Il2CppName: ParseMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseMember)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseMemberEnd
// Il2CppName: ParseMemberEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseMemberEnd)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseMemberEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseString
// Il2CppName: ParseString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::ParseRecord*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ParseString)> {
  static const MethodInfo* get() {
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    static auto* parentPr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ParseString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pr, parentPr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::RegisterObject
// Il2CppName: RegisterObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(::Il2CppObject*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::RegisterObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    static auto* objectPr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "RegisterObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, pr, objectPr});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::RegisterObject
// Il2CppName: RegisterObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(::Il2CppObject*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*, System::Runtime::Serialization::Formatters::Binary::ParseRecord*, bool)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::RegisterObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* pr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    static auto* objectPr = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "ParseRecord")->byval_arg;
    static auto* bIsString = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "RegisterObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, pr, objectPr, bIsString});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetId
// Il2CppName: GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(int64_t)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetId)> {
  static const MethodInfo* get() {
    static auto* objectId = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectId});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::Bind
// Il2CppName: Bind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(::Il2CppString*, ::Il2CppString*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::Bind)> {
  static const MethodInfo* get() {
    static auto* assemblyString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* typeString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "Bind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assemblyString, typeString});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::FastBindToType
// Il2CppName: FastBindToType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(::Il2CppString*, ::Il2CppString*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::FastBindToType)> {
  static const MethodInfo* get() {
    static auto* assemblyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* typeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "FastBindToType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assemblyName, typeName});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::ResolveSimpleAssemblyName
// Il2CppName: ResolveSimpleAssemblyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(System::Reflection::AssemblyName*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::ResolveSimpleAssemblyName)> {
  static const MethodInfo* get() {
    static auto* assemblyName = &::il2cpp_utils::GetClassFromName("System.Reflection", "AssemblyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "ResolveSimpleAssemblyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assemblyName});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetSimplyNamedTypeFromAssembly
// Il2CppName: GetSimplyNamedTypeFromAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Reflection::Assembly*, ::Il2CppString*, ByRef<System::Type*>)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetSimplyNamedTypeFromAssembly)> {
  static const MethodInfo* get() {
    static auto* assm = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    static auto* typeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "GetSimplyNamedTypeFromAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assm, typeName, type});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (System::Runtime::Serialization::Formatters::Binary::ObjectReader::*)(System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, ::Il2CppString*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::GetType)> {
  static const MethodInfo* get() {
    static auto* assemblyInfo = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters.Binary", "BinaryAssemblyInfo")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assemblyInfo, name});
  }
};
// Writing MetadataGetter for method: System::Runtime::Serialization::Formatters::Binary::ObjectReader::CheckTypeForwardedTo
// Il2CppName: CheckTypeForwardedTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Reflection::Assembly*, System::Reflection::Assembly*, System::Type*)>(&System::Runtime::Serialization::Formatters::Binary::ObjectReader::CheckTypeForwardedTo)> {
  static const MethodInfo* get() {
    static auto* sourceAssembly = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    static auto* destAssembly = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    static auto* resolvedType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Serialization::Formatters::Binary::ObjectReader*), "CheckTypeForwardedTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceAssembly, destAssembly, resolvedType});
  }
};
