// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessageSink
  class IMessageSink;
  // Forward declaring type: IMessage
  class IMessage;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: IContextProperty
  class IContextProperty;
  // Forward declaring type: DynamicPropertyCollection
  class DynamicPropertyCollection;
  // Forward declaring type: ContextCallbackObject
  class ContextCallbackObject;
  // Forward declaring type: IDynamicProperty
  class IDynamicProperty;
  // Forward declaring type: CrossContextDelegate
  class CrossContextDelegate;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: LocalDataStoreHolder
  class LocalDataStoreHolder;
  // Forward declaring type: LocalDataStoreMgr
  class LocalDataStoreMgr;
  // Forward declaring type: LocalDataStore
  class LocalDataStore;
  // Forward declaring type: ContextBoundObject
  class ContextBoundObject;
  // Forward declaring type: MarshalByRefObject
  class MarshalByRefObject;
  // Forward declaring type: LocalDataStoreSlot
  class LocalDataStoreSlot;
}
// Forward declaring namespace: System::Runtime::Remoting::Activation
namespace System::Runtime::Remoting::Activation {
  // Forward declaring type: IConstructionCallMessage
  class IConstructionCallMessage;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Contexts
namespace System::Runtime::Remoting::Contexts {
  // Size: 0x58
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Runtime.Remoting.Contexts.Context
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: DA3440
  class Context : public ::Il2CppObject {
    public:
    // private System.Int32 domain_id
    // Size: 0x4
    // Offset: 0x10
    int domain_id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 context_id
    // Size: 0x4
    // Offset: 0x14
    int context_id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.UIntPtr static_data
    // Size: 0x8
    // Offset: 0x18
    System::UIntPtr static_data;
    // Field size check
    static_assert(sizeof(System::UIntPtr) == 0x8);
    // private System.UIntPtr data
    // Size: 0x8
    // Offset: 0x20
    System::UIntPtr data;
    // Field size check
    static_assert(sizeof(System::UIntPtr) == 0x8);
    // private System.Runtime.Remoting.Messaging.IMessageSink server_context_sink_chain
    // Size: 0x8
    // Offset: 0x28
    System::Runtime::Remoting::Messaging::IMessageSink* server_context_sink_chain;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Messaging::IMessageSink*) == 0x8);
    // private System.Runtime.Remoting.Messaging.IMessageSink client_context_sink_chain
    // Size: 0x8
    // Offset: 0x30
    System::Runtime::Remoting::Messaging::IMessageSink* client_context_sink_chain;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Messaging::IMessageSink*) == 0x8);
    // private System.Collections.Generic.List`1<System.Runtime.Remoting.Contexts.IContextProperty> context_properties
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<System::Runtime::Remoting::Contexts::IContextProperty*>* context_properties;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<System::Runtime::Remoting::Contexts::IContextProperty*>*) == 0x8);
    // private System.LocalDataStoreHolder _localDataStore
    // Size: 0x8
    // Offset: 0x40
    System::LocalDataStoreHolder* localDataStore;
    // Field size check
    static_assert(sizeof(System::LocalDataStoreHolder*) == 0x8);
    // private System.Runtime.Remoting.Contexts.DynamicPropertyCollection context_dynamic_properties
    // Size: 0x8
    // Offset: 0x48
    System::Runtime::Remoting::Contexts::DynamicPropertyCollection* context_dynamic_properties;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Contexts::DynamicPropertyCollection*) == 0x8);
    // private System.Runtime.Remoting.Contexts.ContextCallbackObject callback_object
    // Size: 0x8
    // Offset: 0x50
    System::Runtime::Remoting::Contexts::ContextCallbackObject* callback_object;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Contexts::ContextCallbackObject*) == 0x8);
    // Creating value type constructor for type: Context
    Context(int domain_id_ = {}, int context_id_ = {}, System::UIntPtr static_data_ = {}, System::UIntPtr data_ = {}, System::Runtime::Remoting::Messaging::IMessageSink* server_context_sink_chain_ = {}, System::Runtime::Remoting::Messaging::IMessageSink* client_context_sink_chain_ = {}, System::Collections::Generic::List_1<System::Runtime::Remoting::Contexts::IContextProperty*>* context_properties_ = {}, System::LocalDataStoreHolder* localDataStore_ = {}, System::Runtime::Remoting::Contexts::DynamicPropertyCollection* context_dynamic_properties_ = {}, System::Runtime::Remoting::Contexts::ContextCallbackObject* callback_object_ = {}) noexcept : domain_id{domain_id_}, context_id{context_id_}, static_data{static_data_}, data{data_}, server_context_sink_chain{server_context_sink_chain_}, client_context_sink_chain{client_context_sink_chain_}, context_properties{context_properties_}, localDataStore{localDataStore_}, context_dynamic_properties{context_dynamic_properties_}, callback_object{callback_object_} {}
    // Get static field: static private System.Object[] local_slots
    static ::Array<::Il2CppObject*>* _get_local_slots();
    // Set static field: static private System.Object[] local_slots
    static void _set_local_slots(::Array<::Il2CppObject*>* value);
    // Get static field: static private System.Runtime.Remoting.Messaging.IMessageSink default_server_context_sink
    static System::Runtime::Remoting::Messaging::IMessageSink* _get_default_server_context_sink();
    // Set static field: static private System.Runtime.Remoting.Messaging.IMessageSink default_server_context_sink
    static void _set_default_server_context_sink(System::Runtime::Remoting::Messaging::IMessageSink* value);
    // Get static field: static private System.Int32 global_count
    static int _get_global_count();
    // Set static field: static private System.Int32 global_count
    static void _set_global_count(int value);
    // Get static field: static private System.LocalDataStoreMgr _localDataStoreMgr
    static System::LocalDataStoreMgr* _get__localDataStoreMgr();
    // Set static field: static private System.LocalDataStoreMgr _localDataStoreMgr
    static void _set__localDataStoreMgr(System::LocalDataStoreMgr* value);
    // Get static field: static private System.Runtime.Remoting.Contexts.DynamicPropertyCollection global_dynamic_properties
    static System::Runtime::Remoting::Contexts::DynamicPropertyCollection* _get_global_dynamic_properties();
    // Set static field: static private System.Runtime.Remoting.Contexts.DynamicPropertyCollection global_dynamic_properties
    static void _set_global_dynamic_properties(System::Runtime::Remoting::Contexts::DynamicPropertyCollection* value);
    // Get instance field reference: private System.Int32 domain_id
    int& dyn_domain_id();
    // Get instance field reference: private System.Int32 context_id
    int& dyn_context_id();
    // Get instance field reference: private System.UIntPtr static_data
    System::UIntPtr& dyn_static_data();
    // Get instance field reference: private System.UIntPtr data
    System::UIntPtr& dyn_data();
    // Get instance field reference: private System.Runtime.Remoting.Messaging.IMessageSink server_context_sink_chain
    System::Runtime::Remoting::Messaging::IMessageSink*& dyn_server_context_sink_chain();
    // Get instance field reference: private System.Runtime.Remoting.Messaging.IMessageSink client_context_sink_chain
    System::Runtime::Remoting::Messaging::IMessageSink*& dyn_client_context_sink_chain();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Runtime.Remoting.Contexts.IContextProperty> context_properties
    System::Collections::Generic::List_1<System::Runtime::Remoting::Contexts::IContextProperty*>*& dyn_context_properties();
    // Get instance field reference: private System.LocalDataStoreHolder _localDataStore
    System::LocalDataStoreHolder*& dyn__localDataStore();
    // Get instance field reference: private System.Runtime.Remoting.Contexts.DynamicPropertyCollection context_dynamic_properties
    System::Runtime::Remoting::Contexts::DynamicPropertyCollection*& dyn_context_dynamic_properties();
    // Get instance field reference: private System.Runtime.Remoting.Contexts.ContextCallbackObject callback_object
    System::Runtime::Remoting::Contexts::ContextCallbackObject*& dyn_callback_object();
    // static public System.Runtime.Remoting.Contexts.Context get_DefaultContext()
    // Offset: 0x149D010
    static System::Runtime::Remoting::Contexts::Context* get_DefaultContext();
    // public System.Int32 get_ContextID()
    // Offset: 0x149D018
    int get_ContextID();
    // public System.Runtime.Remoting.Contexts.IContextProperty[] get_ContextProperties()
    // Offset: 0x149D020
    ::Array<System::Runtime::Remoting::Contexts::IContextProperty*>* get_ContextProperties();
    // System.Boolean get_IsDefaultContext()
    // Offset: 0x149D090
    bool get_IsDefaultContext();
    // System.Boolean get_NeedsContextSink()
    // Offset: 0x149D0A0
    bool get_NeedsContextSink();
    // static System.Boolean get_HasGlobalDynamicSinks()
    // Offset: 0x149D590
    static bool get_HasGlobalDynamicSinks();
    // System.Boolean get_HasDynamicSinks()
    // Offset: 0x149D6C0
    bool get_HasDynamicSinks();
    // System.Boolean get_HasExitSinks()
    // Offset: 0x1492350
    bool get_HasExitSinks();
    // private System.LocalDataStore get_MyLocalStore()
    // Offset: 0x149DE5C
    System::LocalDataStore* get_MyLocalStore();
    // static private System.Void .cctor()
    // Offset: 0x149E220
    static void _cctor();
    // static private System.Void RegisterContext(System.Runtime.Remoting.Contexts.Context ctx)
    // Offset: 0x149CEC4
    static void RegisterContext(System::Runtime::Remoting::Contexts::Context* ctx);
    // static private System.Void ReleaseContext(System.Runtime.Remoting.Contexts.Context ctx)
    // Offset: 0x149CEC8
    static void ReleaseContext(System::Runtime::Remoting::Contexts::Context* ctx);
    // static public System.Boolean RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty prop, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)
    // Offset: 0x149D16C
    static bool RegisterDynamicProperty(System::Runtime::Remoting::Contexts::IDynamicProperty* prop, System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx);
    // static public System.Boolean UnregisterDynamicProperty(System.String name, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)
    // Offset: 0x149D3F0
    static bool UnregisterDynamicProperty(::Il2CppString* name, System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx);
    // static private System.Runtime.Remoting.Contexts.DynamicPropertyCollection GetDynamicPropertyCollection(System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx)
    // Offset: 0x149D1F8
    static System::Runtime::Remoting::Contexts::DynamicPropertyCollection* GetDynamicPropertyCollection(System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx);
    // static System.Void NotifyGlobalDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)
    // Offset: 0x149D47C
    static void NotifyGlobalDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async);
    // System.Void NotifyDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)
    // Offset: 0x149D63C
    void NotifyDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async);
    // public System.Runtime.Remoting.Contexts.IContextProperty GetProperty(System.String name)
    // Offset: 0x149D6D4
    System::Runtime::Remoting::Contexts::IContextProperty* GetProperty(::Il2CppString* name);
    // public System.Void SetProperty(System.Runtime.Remoting.Contexts.IContextProperty prop)
    // Offset: 0x149D858
    void SetProperty(System::Runtime::Remoting::Contexts::IContextProperty* prop);
    // public System.Void Freeze()
    // Offset: 0x149D98C
    void Freeze();
    // System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSinkChain()
    // Offset: 0x1493C74
    System::Runtime::Remoting::Messaging::IMessageSink* GetServerContextSinkChain();
    // System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSinkChain()
    // Offset: 0x1492414
    System::Runtime::Remoting::Messaging::IMessageSink* GetClientContextSinkChain();
    // System.Runtime.Remoting.Messaging.IMessageSink CreateServerObjectSinkChain(System.MarshalByRefObject obj, System.Boolean forceInternalExecute)
    // Offset: 0x14995B8
    System::Runtime::Remoting::Messaging::IMessageSink* CreateServerObjectSinkChain(System::MarshalByRefObject* obj, bool forceInternalExecute);
    // System.Runtime.Remoting.Messaging.IMessageSink CreateEnvoySink(System.MarshalByRefObject serverObject)
    // Offset: 0x149DB70
    System::Runtime::Remoting::Messaging::IMessageSink* CreateEnvoySink(System::MarshalByRefObject* serverObject);
    // static System.Runtime.Remoting.Contexts.Context SwitchToContext(System.Runtime.Remoting.Contexts.Context newContext)
    // Offset: 0x1494900
    static System::Runtime::Remoting::Contexts::Context* SwitchToContext(System::Runtime::Remoting::Contexts::Context* newContext);
    // static System.Runtime.Remoting.Contexts.Context CreateNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage msg)
    // Offset: 0x149414C
    static System::Runtime::Remoting::Contexts::Context* CreateNewContext(System::Runtime::Remoting::Activation::IConstructionCallMessage* msg);
    // public System.Void DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate deleg)
    // Offset: 0x149DD20
    void DoCallBack(System::Runtime::Remoting::Contexts::CrossContextDelegate* deleg);
    // static public System.LocalDataStoreSlot AllocateDataSlot()
    // Offset: 0x149DFB8
    static System::LocalDataStoreSlot* AllocateDataSlot();
    // static public System.LocalDataStoreSlot AllocateNamedDataSlot(System.String name)
    // Offset: 0x149E02C
    static System::LocalDataStoreSlot* AllocateNamedDataSlot(::Il2CppString* name);
    // static public System.Void FreeNamedDataSlot(System.String name)
    // Offset: 0x149E0A8
    static void FreeNamedDataSlot(::Il2CppString* name);
    // static public System.LocalDataStoreSlot GetNamedDataSlot(System.String name)
    // Offset: 0x149E124
    static System::LocalDataStoreSlot* GetNamedDataSlot(::Il2CppString* name);
    // static public System.Object GetData(System.LocalDataStoreSlot slot)
    // Offset: 0x149E1A0
    static ::Il2CppObject* GetData(System::LocalDataStoreSlot* slot);
    // static public System.Void SetData(System.LocalDataStoreSlot slot, System.Object data)
    // Offset: 0x149E1DC
    static void SetData(System::LocalDataStoreSlot* slot, ::Il2CppObject* data);
    // public System.Void .ctor()
    // Offset: 0x149CECC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Context* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Context*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x149CF60
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
    // public override System.String ToString()
    // Offset: 0x149DAF0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // System.Runtime.Remoting.Contexts.Context
  #pragma pack(pop)
  static check_size<sizeof(Context), 80 + sizeof(System::Runtime::Remoting::Contexts::ContextCallbackObject*)> __System_Runtime_Remoting_Contexts_ContextSizeCheck;
  static_assert(sizeof(Context) == 0x58);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Contexts::Context*, "System.Runtime.Remoting.Contexts", "Context");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_DefaultContext
// Il2CppName: get_DefaultContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::Context* (*)()>(&System::Runtime::Remoting::Contexts::Context::get_DefaultContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_DefaultContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_ContextID
// Il2CppName: get_ContextID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_ContextID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_ContextID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_ContextProperties
// Il2CppName: get_ContextProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Runtime::Remoting::Contexts::IContextProperty*>* (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_ContextProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_ContextProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_IsDefaultContext
// Il2CppName: get_IsDefaultContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_IsDefaultContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_IsDefaultContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_NeedsContextSink
// Il2CppName: get_NeedsContextSink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_NeedsContextSink)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_NeedsContextSink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_HasGlobalDynamicSinks
// Il2CppName: get_HasGlobalDynamicSinks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Runtime::Remoting::Contexts::Context::get_HasGlobalDynamicSinks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_HasGlobalDynamicSinks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_HasDynamicSinks
// Il2CppName: get_HasDynamicSinks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_HasDynamicSinks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_HasDynamicSinks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_HasExitSinks
// Il2CppName: get_HasExitSinks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_HasExitSinks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_HasExitSinks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::get_MyLocalStore
// Il2CppName: get_MyLocalStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::LocalDataStore* (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::get_MyLocalStore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "get_MyLocalStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Remoting::Contexts::Context::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::RegisterContext
// Il2CppName: RegisterContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::RegisterContext)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "RegisterContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::ReleaseContext
// Il2CppName: ReleaseContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::ReleaseContext)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "ReleaseContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::RegisterDynamicProperty
// Il2CppName: RegisterDynamicProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Runtime::Remoting::Contexts::IDynamicProperty*, System::ContextBoundObject*, System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::RegisterDynamicProperty)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "IDynamicProperty")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "ContextBoundObject")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "RegisterDynamicProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop, obj, ctx});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::UnregisterDynamicProperty
// Il2CppName: UnregisterDynamicProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::ContextBoundObject*, System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::UnregisterDynamicProperty)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "ContextBoundObject")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "UnregisterDynamicProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, obj, ctx});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetDynamicPropertyCollection
// Il2CppName: GetDynamicPropertyCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::DynamicPropertyCollection* (*)(System::ContextBoundObject*, System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::GetDynamicPropertyCollection)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "ContextBoundObject")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetDynamicPropertyCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, ctx});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::NotifyGlobalDynamicSinks
// Il2CppName: NotifyGlobalDynamicSinks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, System::Runtime::Remoting::Messaging::IMessage*, bool, bool)>(&System::Runtime::Remoting::Contexts::Context::NotifyGlobalDynamicSinks)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* req_msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMessage")->byval_arg;
    static auto* client_site = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* async = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "NotifyGlobalDynamicSinks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start, req_msg, client_site, async});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::NotifyDynamicSinks
// Il2CppName: NotifyDynamicSinks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Contexts::Context::*)(bool, System::Runtime::Remoting::Messaging::IMessage*, bool, bool)>(&System::Runtime::Remoting::Contexts::Context::NotifyDynamicSinks)> {
  static const MethodInfo* get() {
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* req_msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMessage")->byval_arg;
    static auto* client_site = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* async = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "NotifyDynamicSinks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{start, req_msg, client_site, async});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetProperty
// Il2CppName: GetProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::IContextProperty* (System::Runtime::Remoting::Contexts::Context::*)(::Il2CppString*)>(&System::Runtime::Remoting::Contexts::Context::GetProperty)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::SetProperty
// Il2CppName: SetProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Contexts::Context::*)(System::Runtime::Remoting::Contexts::IContextProperty*)>(&System::Runtime::Remoting::Contexts::Context::SetProperty)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "IContextProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "SetProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::Freeze
// Il2CppName: Freeze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::Freeze)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "Freeze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetServerContextSinkChain
// Il2CppName: GetServerContextSinkChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::GetServerContextSinkChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetServerContextSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetClientContextSinkChain
// Il2CppName: GetClientContextSinkChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::GetClientContextSinkChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetClientContextSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::CreateServerObjectSinkChain
// Il2CppName: CreateServerObjectSinkChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (System::Runtime::Remoting::Contexts::Context::*)(System::MarshalByRefObject*, bool)>(&System::Runtime::Remoting::Contexts::Context::CreateServerObjectSinkChain)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    static auto* forceInternalExecute = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "CreateServerObjectSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, forceInternalExecute});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::CreateEnvoySink
// Il2CppName: CreateEnvoySink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Messaging::IMessageSink* (System::Runtime::Remoting::Contexts::Context::*)(System::MarshalByRefObject*)>(&System::Runtime::Remoting::Contexts::Context::CreateEnvoySink)> {
  static const MethodInfo* get() {
    static auto* serverObject = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "CreateEnvoySink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serverObject});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::SwitchToContext
// Il2CppName: SwitchToContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::Context* (*)(System::Runtime::Remoting::Contexts::Context*)>(&System::Runtime::Remoting::Contexts::Context::SwitchToContext)> {
  static const MethodInfo* get() {
    static auto* newContext = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "Context")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "SwitchToContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newContext});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::CreateNewContext
// Il2CppName: CreateNewContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Remoting::Contexts::Context* (*)(System::Runtime::Remoting::Activation::IConstructionCallMessage*)>(&System::Runtime::Remoting::Contexts::Context::CreateNewContext)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Activation", "IConstructionCallMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "CreateNewContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::DoCallBack
// Il2CppName: DoCallBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Contexts::Context::*)(System::Runtime::Remoting::Contexts::CrossContextDelegate*)>(&System::Runtime::Remoting::Contexts::Context::DoCallBack)> {
  static const MethodInfo* get() {
    static auto* deleg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Contexts", "CrossContextDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "DoCallBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deleg});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::AllocateDataSlot
// Il2CppName: AllocateDataSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::LocalDataStoreSlot* (*)()>(&System::Runtime::Remoting::Contexts::Context::AllocateDataSlot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "AllocateDataSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::AllocateNamedDataSlot
// Il2CppName: AllocateNamedDataSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::LocalDataStoreSlot* (*)(::Il2CppString*)>(&System::Runtime::Remoting::Contexts::Context::AllocateNamedDataSlot)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "AllocateNamedDataSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::FreeNamedDataSlot
// Il2CppName: FreeNamedDataSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&System::Runtime::Remoting::Contexts::Context::FreeNamedDataSlot)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "FreeNamedDataSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetNamedDataSlot
// Il2CppName: GetNamedDataSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::LocalDataStoreSlot* (*)(::Il2CppString*)>(&System::Runtime::Remoting::Contexts::Context::GetNamedDataSlot)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetNamedDataSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::GetData
// Il2CppName: GetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::LocalDataStoreSlot*)>(&System::Runtime::Remoting::Contexts::Context::GetData)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("System", "LocalDataStoreSlot")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "GetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::LocalDataStoreSlot*, ::Il2CppObject*)>(&System::Runtime::Remoting::Contexts::Context::SetData)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("System", "LocalDataStoreSlot")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot, data});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::Contexts::Context::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Runtime::Remoting::Contexts::Context::*)()>(&System::Runtime::Remoting::Contexts::Context::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::Contexts::Context*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
