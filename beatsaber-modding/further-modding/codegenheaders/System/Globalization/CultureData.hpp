// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CalendarData
  class CalendarData;
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x88
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Globalization.CultureData
  // [TokenAttribute] Offset: FFFFFFFF
  class CultureData : public ::Il2CppObject {
    public:
    // private System.String sAM1159
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* sAM1159;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String sPM2359
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* sPM2359;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String sTimeSeparator
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* sTimeSeparator;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String[] saLongTimes
    // Size: 0x8
    // Offset: 0x28
    ::Array<::Il2CppString*>* saLongTimes;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppString*>*) == 0x8);
    // private System.String[] saShortTimes
    // Size: 0x8
    // Offset: 0x30
    ::Array<::Il2CppString*>* saShortTimes;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppString*>*) == 0x8);
    // private System.Int32 iFirstDayOfWeek
    // Size: 0x4
    // Offset: 0x38
    int iFirstDayOfWeek;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iFirstWeekOfYear
    // Size: 0x4
    // Offset: 0x3C
    int iFirstWeekOfYear;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32[] waCalendars
    // Size: 0x8
    // Offset: 0x40
    ::Array<int>* waCalendars;
    // Field size check
    static_assert(sizeof(::Array<int>*) == 0x8);
    // private System.Globalization.CalendarData[] calendars
    // Size: 0x8
    // Offset: 0x48
    ::Array<System::Globalization::CalendarData*>* calendars;
    // Field size check
    static_assert(sizeof(::Array<System::Globalization::CalendarData*>*) == 0x8);
    // private System.String sISO639Language
    // Size: 0x8
    // Offset: 0x50
    ::Il2CppString* sISO639Language;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private readonly System.String sRealName
    // Size: 0x8
    // Offset: 0x58
    ::Il2CppString* sRealName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean bUseOverrides
    // Size: 0x1
    // Offset: 0x60
    bool bUseOverrides;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bUseOverrides and: calendarId
    char __padding11[0x3] = {};
    // private System.Int32 calendarId
    // Size: 0x4
    // Offset: 0x64
    int calendarId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 numberIndex
    // Size: 0x4
    // Offset: 0x68
    int numberIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iDefaultAnsiCodePage
    // Size: 0x4
    // Offset: 0x6C
    int iDefaultAnsiCodePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iDefaultOemCodePage
    // Size: 0x4
    // Offset: 0x70
    int iDefaultOemCodePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iDefaultMacCodePage
    // Size: 0x4
    // Offset: 0x74
    int iDefaultMacCodePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iDefaultEbcdicCodePage
    // Size: 0x4
    // Offset: 0x78
    int iDefaultEbcdicCodePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean isRightToLeft
    // Size: 0x1
    // Offset: 0x7C
    bool isRightToLeft;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isRightToLeft and: sListSeparator
    char __padding18[0x3] = {};
    // private System.String sListSeparator
    // Size: 0x8
    // Offset: 0x80
    ::Il2CppString* sListSeparator;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: CultureData
    CultureData(::Il2CppString* sAM1159_ = {}, ::Il2CppString* sPM2359_ = {}, ::Il2CppString* sTimeSeparator_ = {}, ::Array<::Il2CppString*>* saLongTimes_ = {}, ::Array<::Il2CppString*>* saShortTimes_ = {}, int iFirstDayOfWeek_ = {}, int iFirstWeekOfYear_ = {}, ::Array<int>* waCalendars_ = {}, ::Array<System::Globalization::CalendarData*>* calendars_ = {}, ::Il2CppString* sISO639Language_ = {}, ::Il2CppString* sRealName_ = {}, bool bUseOverrides_ = {}, int calendarId_ = {}, int numberIndex_ = {}, int iDefaultAnsiCodePage_ = {}, int iDefaultOemCodePage_ = {}, int iDefaultMacCodePage_ = {}, int iDefaultEbcdicCodePage_ = {}, bool isRightToLeft_ = {}, ::Il2CppString* sListSeparator_ = {}) noexcept : sAM1159{sAM1159_}, sPM2359{sPM2359_}, sTimeSeparator{sTimeSeparator_}, saLongTimes{saLongTimes_}, saShortTimes{saShortTimes_}, iFirstDayOfWeek{iFirstDayOfWeek_}, iFirstWeekOfYear{iFirstWeekOfYear_}, waCalendars{waCalendars_}, calendars{calendars_}, sISO639Language{sISO639Language_}, sRealName{sRealName_}, bUseOverrides{bUseOverrides_}, calendarId{calendarId_}, numberIndex{numberIndex_}, iDefaultAnsiCodePage{iDefaultAnsiCodePage_}, iDefaultOemCodePage{iDefaultOemCodePage_}, iDefaultMacCodePage{iDefaultMacCodePage_}, iDefaultEbcdicCodePage{iDefaultEbcdicCodePage_}, isRightToLeft{isRightToLeft_}, sListSeparator{sListSeparator_} {}
    // Get static field: static private System.Globalization.CultureData s_Invariant
    static System::Globalization::CultureData* _get_s_Invariant();
    // Set static field: static private System.Globalization.CultureData s_Invariant
    static void _set_s_Invariant(System::Globalization::CultureData* value);
    // Get instance field reference: private System.String sAM1159
    ::Il2CppString*& dyn_sAM1159();
    // Get instance field reference: private System.String sPM2359
    ::Il2CppString*& dyn_sPM2359();
    // Get instance field reference: private System.String sTimeSeparator
    ::Il2CppString*& dyn_sTimeSeparator();
    // Get instance field reference: private System.String[] saLongTimes
    ::Array<::Il2CppString*>*& dyn_saLongTimes();
    // Get instance field reference: private System.String[] saShortTimes
    ::Array<::Il2CppString*>*& dyn_saShortTimes();
    // Get instance field reference: private System.Int32 iFirstDayOfWeek
    int& dyn_iFirstDayOfWeek();
    // Get instance field reference: private System.Int32 iFirstWeekOfYear
    int& dyn_iFirstWeekOfYear();
    // Get instance field reference: private System.Int32[] waCalendars
    ::Array<int>*& dyn_waCalendars();
    // Get instance field reference: private System.Globalization.CalendarData[] calendars
    ::Array<System::Globalization::CalendarData*>*& dyn_calendars();
    // Get instance field reference: private System.String sISO639Language
    ::Il2CppString*& dyn_sISO639Language();
    // Get instance field reference: private readonly System.String sRealName
    ::Il2CppString*& dyn_sRealName();
    // Get instance field reference: private System.Boolean bUseOverrides
    bool& dyn_bUseOverrides();
    // Get instance field reference: private System.Int32 calendarId
    int& dyn_calendarId();
    // Get instance field reference: private System.Int32 numberIndex
    int& dyn_numberIndex();
    // Get instance field reference: private System.Int32 iDefaultAnsiCodePage
    int& dyn_iDefaultAnsiCodePage();
    // Get instance field reference: private System.Int32 iDefaultOemCodePage
    int& dyn_iDefaultOemCodePage();
    // Get instance field reference: private System.Int32 iDefaultMacCodePage
    int& dyn_iDefaultMacCodePage();
    // Get instance field reference: private System.Int32 iDefaultEbcdicCodePage
    int& dyn_iDefaultEbcdicCodePage();
    // Get instance field reference: private System.Boolean isRightToLeft
    bool& dyn_isRightToLeft();
    // Get instance field reference: private System.String sListSeparator
    ::Il2CppString*& dyn_sListSeparator();
    // static public System.Globalization.CultureData get_Invariant()
    // Offset: 0x180F2B8
    static System::Globalization::CultureData* get_Invariant();
    // System.String[] get_LongTimes()
    // Offset: 0x180F7F4
    ::Array<::Il2CppString*>* get_LongTimes();
    // System.String[] get_ShortTimes()
    // Offset: 0x180F818
    ::Array<::Il2CppString*>* get_ShortTimes();
    // System.String get_SISO639LANGNAME()
    // Offset: 0x180F83C
    ::Il2CppString* get_SISO639LANGNAME();
    // System.Int32 get_IFIRSTDAYOFWEEK()
    // Offset: 0x180F844
    int get_IFIRSTDAYOFWEEK();
    // System.Int32 get_IFIRSTWEEKOFYEAR()
    // Offset: 0x180F84C
    int get_IFIRSTWEEKOFYEAR();
    // System.String get_SAM1159()
    // Offset: 0x180F854
    ::Il2CppString* get_SAM1159();
    // System.String get_SPM2359()
    // Offset: 0x180F85C
    ::Il2CppString* get_SPM2359();
    // System.String get_TimeSeparator()
    // Offset: 0x180F864
    ::Il2CppString* get_TimeSeparator();
    // System.Int32[] get_CalendarIds()
    // Offset: 0x180F86C
    ::Array<int>* get_CalendarIds();
    // System.Boolean get_IsInvariantCulture()
    // Offset: 0x180F9C0
    bool get_IsInvariantCulture();
    // System.String get_CultureName()
    // Offset: 0x180F9CC
    ::Il2CppString* get_CultureName();
    // System.String get_SCOMPAREINFO()
    // Offset: 0x180F9D4
    ::Il2CppString* get_SCOMPAREINFO();
    // System.String get_STEXTINFO()
    // Offset: 0x180FA1C
    ::Il2CppString* get_STEXTINFO();
    // System.Int32 get_ILANGUAGE()
    // Offset: 0x180FA24
    int get_ILANGUAGE();
    // System.Boolean get_UseUserOverride()
    // Offset: 0x180FA2C
    bool get_UseUserOverride();
    // private System.Void .ctor(System.String name)
    // Offset: 0x180F28C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CultureData* New_ctor(::Il2CppString* name) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CultureData*, creationType>(name)));
    }
    // static public System.Globalization.CultureData GetCultureData(System.String cultureName, System.Boolean useUserOverride)
    // Offset: 0x180F5BC
    static System::Globalization::CultureData* GetCultureData(::Il2CppString* cultureName, bool useUserOverride);
    // static public System.Globalization.CultureData GetCultureData(System.String cultureName, System.Boolean useUserOverride, System.Int32 datetimeIndex, System.Int32 calendarId, System.Int32 numberIndex, System.String iso2lang, System.Int32 ansiCodePage, System.Int32 oemCodePage, System.Int32 macCodePage, System.Int32 ebcdicCodePage, System.Boolean rightToLeft, System.String listSeparator)
    // Offset: 0x180F6B8
    static System::Globalization::CultureData* GetCultureData(::Il2CppString* cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, ::Il2CppString* iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, ::Il2CppString* listSeparator);
    // static System.Globalization.CultureData GetCultureData(System.Int32 culture, System.Boolean bUseUserOverride)
    // Offset: 0x180F7EC
    static System::Globalization::CultureData* GetCultureData(int culture, bool bUseUserOverride);
    // private System.Void fill_culture_data(System.Int32 datetimeIndex)
    // Offset: 0x180F7E8
    void fill_culture_data(int datetimeIndex);
    // public System.Globalization.CalendarData GetCalendar(System.Int32 calendarId)
    // Offset: 0x180CA1C
    System::Globalization::CalendarData* GetCalendar(int calendarId);
    // System.String[] EraNames(System.Int32 calendarId)
    // Offset: 0x180FA34
    ::Array<::Il2CppString*>* EraNames(int calendarId);
    // System.String[] AbbrevEraNames(System.Int32 calendarId)
    // Offset: 0x180FA54
    ::Array<::Il2CppString*>* AbbrevEraNames(int calendarId);
    // System.String[] AbbreviatedEnglishEraNames(System.Int32 calendarId)
    // Offset: 0x180FA74
    ::Array<::Il2CppString*>* AbbreviatedEnglishEraNames(int calendarId);
    // System.String[] ShortDates(System.Int32 calendarId)
    // Offset: 0x180FA94
    ::Array<::Il2CppString*>* ShortDates(int calendarId);
    // System.String[] LongDates(System.Int32 calendarId)
    // Offset: 0x180FAB4
    ::Array<::Il2CppString*>* LongDates(int calendarId);
    // System.String[] YearMonths(System.Int32 calendarId)
    // Offset: 0x180FAD4
    ::Array<::Il2CppString*>* YearMonths(int calendarId);
    // System.String[] DayNames(System.Int32 calendarId)
    // Offset: 0x180FAF4
    ::Array<::Il2CppString*>* DayNames(int calendarId);
    // System.String[] AbbreviatedDayNames(System.Int32 calendarId)
    // Offset: 0x180FB14
    ::Array<::Il2CppString*>* AbbreviatedDayNames(int calendarId);
    // System.String[] MonthNames(System.Int32 calendarId)
    // Offset: 0x180FB34
    ::Array<::Il2CppString*>* MonthNames(int calendarId);
    // System.String[] GenitiveMonthNames(System.Int32 calendarId)
    // Offset: 0x180FB54
    ::Array<::Il2CppString*>* GenitiveMonthNames(int calendarId);
    // System.String[] AbbreviatedMonthNames(System.Int32 calendarId)
    // Offset: 0x180FB74
    ::Array<::Il2CppString*>* AbbreviatedMonthNames(int calendarId);
    // System.String[] AbbreviatedGenitiveMonthNames(System.Int32 calendarId)
    // Offset: 0x180FB94
    ::Array<::Il2CppString*>* AbbreviatedGenitiveMonthNames(int calendarId);
    // System.String[] LeapYearMonthNames(System.Int32 calendarId)
    // Offset: 0x180FBB4
    ::Array<::Il2CppString*>* LeapYearMonthNames(int calendarId);
    // System.String MonthDay(System.Int32 calendarId)
    // Offset: 0x180FBD4
    ::Il2CppString* MonthDay(int calendarId);
    // System.String DateSeparator(System.Int32 calendarId)
    // Offset: 0x180FBF4
    ::Il2CppString* DateSeparator(int calendarId);
    // static private System.String GetDateSeparator(System.String format)
    // Offset: 0x180FC30
    static ::Il2CppString* GetDateSeparator(::Il2CppString* format);
    // static private System.String GetSeparator(System.String format, System.String timeParts)
    // Offset: 0x180FC80
    static ::Il2CppString* GetSeparator(::Il2CppString* format, ::Il2CppString* timeParts);
    // static private System.Int32 IndexOfTimePart(System.String format, System.Int32 startIndex, System.String timeParts)
    // Offset: 0x180FD8C
    static int IndexOfTimePart(::Il2CppString* format, int startIndex, ::Il2CppString* timeParts);
    // static private System.String UnescapeNlsString(System.String str, System.Int32 start, System.Int32 end)
    // Offset: 0x180FE84
    static ::Il2CppString* UnescapeNlsString(::Il2CppString* str, int start, int end);
    // static System.String[] ReescapeWin32Strings(System.String[] array)
    // Offset: 0x180C1EC
    static ::Array<::Il2CppString*>* ReescapeWin32Strings(::Array<::Il2CppString*>* array);
    // static System.String ReescapeWin32String(System.String str)
    // Offset: 0x180C1F0
    static ::Il2CppString* ReescapeWin32String(::Il2CppString* str);
    // System.Void GetNFIValues(System.Globalization.NumberFormatInfo nfi)
    // Offset: 0x1810038
    void GetNFIValues(System::Globalization::NumberFormatInfo* nfi);
    // static private System.Void fill_number_data(System.Globalization.NumberFormatInfo nfi, System.Int32 numberIndex)
    // Offset: 0x1810094
    static void fill_number_data(System::Globalization::NumberFormatInfo* nfi, int numberIndex);
  }; // System.Globalization.CultureData
  #pragma pack(pop)
  static check_size<sizeof(CultureData), 128 + sizeof(::Il2CppString*)> __System_Globalization_CultureDataSizeCheck;
  static_assert(sizeof(CultureData) == 0x88);
}
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::CultureData*, "System.Globalization", "CultureData");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::CultureData::get_Invariant
// Il2CppName: get_Invariant
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureData* (*)()>(&System::Globalization::CultureData::get_Invariant)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_Invariant", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_LongTimes
// Il2CppName: get_LongTimes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_LongTimes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_LongTimes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_ShortTimes
// Il2CppName: get_ShortTimes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_ShortTimes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_ShortTimes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_SISO639LANGNAME
// Il2CppName: get_SISO639LANGNAME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_SISO639LANGNAME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_SISO639LANGNAME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_IFIRSTDAYOFWEEK
// Il2CppName: get_IFIRSTDAYOFWEEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_IFIRSTDAYOFWEEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_IFIRSTDAYOFWEEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR
// Il2CppName: get_IFIRSTWEEKOFYEAR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_IFIRSTWEEKOFYEAR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_SAM1159
// Il2CppName: get_SAM1159
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_SAM1159)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_SAM1159", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_SPM2359
// Il2CppName: get_SPM2359
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_SPM2359)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_SPM2359", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_TimeSeparator
// Il2CppName: get_TimeSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_TimeSeparator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_TimeSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_CalendarIds
// Il2CppName: get_CalendarIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_CalendarIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_CalendarIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_IsInvariantCulture
// Il2CppName: get_IsInvariantCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_IsInvariantCulture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_IsInvariantCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_CultureName
// Il2CppName: get_CultureName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_CultureName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_CultureName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_SCOMPAREINFO
// Il2CppName: get_SCOMPAREINFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_SCOMPAREINFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_SCOMPAREINFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_STEXTINFO
// Il2CppName: get_STEXTINFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_STEXTINFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_STEXTINFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_ILANGUAGE
// Il2CppName: get_ILANGUAGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_ILANGUAGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_ILANGUAGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::get_UseUserOverride
// Il2CppName: get_UseUserOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CultureData::*)()>(&System::Globalization::CultureData::get_UseUserOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "get_UseUserOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Globalization::CultureData::GetCultureData
// Il2CppName: GetCultureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureData* (*)(::Il2CppString*, bool)>(&System::Globalization::CultureData::GetCultureData)> {
  static const MethodInfo* get() {
    static auto* cultureName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* useUserOverride = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetCultureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cultureName, useUserOverride});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetCultureData
// Il2CppName: GetCultureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureData* (*)(::Il2CppString*, bool, int, int, int, ::Il2CppString*, int, int, int, int, bool, ::Il2CppString*)>(&System::Globalization::CultureData::GetCultureData)> {
  static const MethodInfo* get() {
    static auto* cultureName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* useUserOverride = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* datetimeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* numberIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* iso2lang = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ansiCodePage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* oemCodePage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* macCodePage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ebcdicCodePage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rightToLeft = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* listSeparator = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetCultureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetCultureData
// Il2CppName: GetCultureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CultureData* (*)(int, bool)>(&System::Globalization::CultureData::GetCultureData)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bUseUserOverride = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetCultureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture, bUseUserOverride});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::fill_culture_data
// Il2CppName: fill_culture_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::fill_culture_data)> {
  static const MethodInfo* get() {
    static auto* datetimeIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "fill_culture_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{datetimeIndex});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetCalendar
// Il2CppName: GetCalendar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Globalization::CalendarData* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::GetCalendar)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetCalendar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::EraNames
// Il2CppName: EraNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::EraNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "EraNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::AbbrevEraNames
// Il2CppName: AbbrevEraNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::AbbrevEraNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "AbbrevEraNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::AbbreviatedEnglishEraNames
// Il2CppName: AbbreviatedEnglishEraNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::AbbreviatedEnglishEraNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::ShortDates
// Il2CppName: ShortDates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::ShortDates)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "ShortDates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::LongDates
// Il2CppName: LongDates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::LongDates)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "LongDates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::YearMonths
// Il2CppName: YearMonths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::YearMonths)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "YearMonths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::DayNames
// Il2CppName: DayNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::DayNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "DayNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::AbbreviatedDayNames
// Il2CppName: AbbreviatedDayNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::AbbreviatedDayNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "AbbreviatedDayNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::MonthNames
// Il2CppName: MonthNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::MonthNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "MonthNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GenitiveMonthNames
// Il2CppName: GenitiveMonthNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::GenitiveMonthNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GenitiveMonthNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::AbbreviatedMonthNames
// Il2CppName: AbbreviatedMonthNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::AbbreviatedMonthNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "AbbreviatedMonthNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::AbbreviatedGenitiveMonthNames
// Il2CppName: AbbreviatedGenitiveMonthNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::AbbreviatedGenitiveMonthNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "AbbreviatedGenitiveMonthNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::LeapYearMonthNames
// Il2CppName: LeapYearMonthNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::LeapYearMonthNames)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "LeapYearMonthNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::MonthDay
// Il2CppName: MonthDay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::MonthDay)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "MonthDay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::DateSeparator
// Il2CppName: DateSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::Globalization::CultureData::*)(int)>(&System::Globalization::CultureData::DateSeparator)> {
  static const MethodInfo* get() {
    static auto* calendarId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "DateSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{calendarId});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetDateSeparator
// Il2CppName: GetDateSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Globalization::CultureData::GetDateSeparator)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetDateSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetSeparator
// Il2CppName: GetSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppString*)>(&System::Globalization::CultureData::GetSeparator)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeParts = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, timeParts});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::IndexOfTimePart
// Il2CppName: IndexOfTimePart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*, int, ::Il2CppString*)>(&System::Globalization::CultureData::IndexOfTimePart)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* timeParts = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "IndexOfTimePart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, startIndex, timeParts});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::UnescapeNlsString
// Il2CppName: UnescapeNlsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, int, int)>(&System::Globalization::CultureData::UnescapeNlsString)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "UnescapeNlsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, start, end});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::ReescapeWin32Strings
// Il2CppName: ReescapeWin32Strings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(::Array<::Il2CppString*>*)>(&System::Globalization::CultureData::ReescapeWin32Strings)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "ReescapeWin32Strings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::ReescapeWin32String
// Il2CppName: ReescapeWin32String
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Globalization::CultureData::ReescapeWin32String)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "ReescapeWin32String", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::GetNFIValues
// Il2CppName: GetNFIValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CultureData::*)(System::Globalization::NumberFormatInfo*)>(&System::Globalization::CultureData::GetNFIValues)> {
  static const MethodInfo* get() {
    static auto* nfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "GetNFIValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nfi});
  }
};
// Writing MetadataGetter for method: System::Globalization::CultureData::fill_number_data
// Il2CppName: fill_number_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Globalization::NumberFormatInfo*, int)>(&System::Globalization::CultureData::fill_number_data)> {
  static const MethodInfo* get() {
    static auto* nfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* numberIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CultureData*), "fill_number_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nfi, numberIndex});
  }
};
