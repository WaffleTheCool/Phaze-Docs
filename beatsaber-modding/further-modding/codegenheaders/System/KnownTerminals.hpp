// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.KnownTerminals
  // [TokenAttribute] Offset: FFFFFFFF
  class KnownTerminals : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: KnownTerminals
    KnownTerminals() noexcept {}
    // static public System.Byte[] get_linux()
    // Offset: 0x183B6B0
    static ::Array<uint8_t>* get_linux();
    // static public System.Byte[] get_xterm()
    // Offset: 0x183B71C
    static ::Array<uint8_t>* get_xterm();
    // static public System.Byte[] get_ansi()
    // Offset: 0x183B788
    static ::Array<uint8_t>* get_ansi();
  }; // System.KnownTerminals
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::KnownTerminals*, "System", "KnownTerminals");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::KnownTerminals::get_linux
// Il2CppName: get_linux
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&System::KnownTerminals::get_linux)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::KnownTerminals*), "get_linux", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::KnownTerminals::get_xterm
// Il2CppName: get_xterm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&System::KnownTerminals::get_xterm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::KnownTerminals*), "get_xterm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::KnownTerminals::get_ansi
// Il2CppName: get_ansi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&System::KnownTerminals::get_ansi)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::KnownTerminals*), "get_ansi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
