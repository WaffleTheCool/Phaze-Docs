// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: ReadOnlyCollection`1<T>
  template<typename T>
  class ReadOnlyCollection_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::Runtime::ExceptionServices
namespace System::Runtime::ExceptionServices {
  // Forward declaring type: ExceptionDispatchInfo
  class ExceptionDispatchInfo;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: System.AggregateException
  // [TokenAttribute] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: D9F0DC
  class AggregateException : public System::Exception {
    public:
    // private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
    // Size: 0x8
    // Offset: 0x88
    System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* m_innerExceptions;
    // Field size check
    static_assert(sizeof(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*) == 0x8);
    // Creating value type constructor for type: AggregateException
    AggregateException(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* m_innerExceptions_ = {}) noexcept : m_innerExceptions{m_innerExceptions_} {}
    // Creating conversion operator: operator System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*
    constexpr operator System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*() const noexcept {
      return m_innerExceptions;
    }
    // Get instance field reference: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
    System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*& dyn_m_innerExceptions();
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> get_InnerExceptions()
    // Offset: 0x17CC69C
    System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* get_InnerExceptions();
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)
    // Offset: 0x17CB834
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Collections::Generic::IEnumerable_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptions)));
    }
    // public System.Void .ctor(System.Exception[] innerExceptions)
    // Offset: 0x17CB954
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Array<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptions)));
    }
    // public System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)
    // Offset: 0x17CB8A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IEnumerable_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // public System.Void .ctor(System.String message, System.Exception[] innerExceptions)
    // Offset: 0x17CB9C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, ::Array<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // private System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Exception> innerExceptions)
    // Offset: 0x17CB9C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IList_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x17CBE38
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Collections::Generic::IEnumerable_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptionInfos)));
    }
    // System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x17CBEA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IEnumerable_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptionInfos)));
    }
    // private System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x17CBF58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IList_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptionInfos)));
    }
    // public System.AggregateException Flatten()
    // Offset: 0x17CC6A4
    System::AggregateException* Flatten();
    // public System.Void .ctor()
    // Offset: 0x17CB758
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x17CC384
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(info, context)));
    }
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x17CC53C
    // Implemented from: System.Exception
    // Base method: System.Void Exception::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public override System.String ToString()
    // Offset: 0x17CC944
    // Implemented from: System.Exception
    // Base method: System.String Exception::ToString()
    ::Il2CppString* ToString();
  }; // System.AggregateException
  #pragma pack(pop)
  static check_size<sizeof(AggregateException), 136 + sizeof(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*)> __System_AggregateExceptionSizeCheck;
  static_assert(sizeof(AggregateException) == 0x90);
}
DEFINE_IL2CPP_ARG_TYPE(System::AggregateException*, "System", "AggregateException");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::AggregateException::get_InnerExceptions
// Il2CppName: get_InnerExceptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* (System::AggregateException::*)()>(&System::AggregateException::get_InnerExceptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::AggregateException*), "get_InnerExceptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::Flatten
// Il2CppName: Flatten
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::AggregateException* (System::AggregateException::*)()>(&System::AggregateException::Flatten)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::AggregateException*), "Flatten", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::AggregateException::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::AggregateException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&System::AggregateException::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::AggregateException*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::AggregateException::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (System::AggregateException::*)()>(&System::AggregateException::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::AggregateException*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
