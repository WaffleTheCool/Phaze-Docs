// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: OperatingSystem
  class OperatingSystem;
  // Forward declaring type: PlatformID
  struct PlatformID;
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Environment
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: DA036C
  class Environment : public ::Il2CppObject {
    public:
    // Nested type: System::Environment::SpecialFolder
    struct SpecialFolder;
    // Nested type: System::Environment::SpecialFolderOption
    struct SpecialFolderOption;
    // Creating value type constructor for type: Environment
    Environment() noexcept {}
    // static field const value: static private System.Int32 mono_corlib_version
    static constexpr const int mono_corlib_version = 1051100001;
    // Get static field: static private System.Int32 mono_corlib_version
    static int _get_mono_corlib_version();
    // Set static field: static private System.Int32 mono_corlib_version
    static void _set_mono_corlib_version(int value);
    // Get static field: static private System.String nl
    static ::Il2CppString* _get_nl();
    // Set static field: static private System.String nl
    static void _set_nl(::Il2CppString* value);
    // Get static field: static private System.OperatingSystem os
    static System::OperatingSystem* _get_os();
    // Set static field: static private System.OperatingSystem os
    static void _set_os(System::OperatingSystem* value);
    // static public System.String get_CurrentDirectory()
    // Offset: 0x1807404
    static ::Il2CppString* get_CurrentDirectory();
    // static public System.Int32 get_CurrentManagedThreadId()
    // Offset: 0x180740C
    static int get_CurrentManagedThreadId();
    // static public System.Boolean get_HasShutdownStarted()
    // Offset: 0x1807430
    static bool get_HasShutdownStarted();
    // static public System.String get_MachineName()
    // Offset: 0x1807434
    static ::Il2CppString* get_MachineName();
    // static public System.String get_NewLine()
    // Offset: 0x180743C
    static ::Il2CppString* get_NewLine();
    // static System.PlatformID get_Platform()
    // Offset: 0x18074AC
    static System::PlatformID get_Platform();
    // static public System.OperatingSystem get_OSVersion()
    // Offset: 0x18074B4
    static System::OperatingSystem* get_OSVersion();
    // static public System.String get_StackTrace()
    // Offset: 0x180777C
    static ::Il2CppString* get_StackTrace();
    // static public System.Int32 get_TickCount()
    // Offset: 0x18077F0
    static int get_TickCount();
    // static public System.String get_UserDomainName()
    // Offset: 0x18077F4
    static ::Il2CppString* get_UserDomainName();
    // static public System.String get_UserName()
    // Offset: 0x18077F8
    static ::Il2CppString* get_UserName();
    // static public System.Boolean get_Is64BitProcess()
    // Offset: 0x18085D0
    static bool get_Is64BitProcess();
    // static public System.Int32 get_ProcessorCount()
    // Offset: 0x18085F0
    static int get_ProcessorCount();
    // static System.Boolean get_IsRunningOnWindows()
    // Offset: 0x1807AB8
    static bool get_IsRunningOnWindows();
    // static System.Boolean get_IsUnix()
    // Offset: 0x18085FC
    static bool get_IsUnix();
    // static System.String GetResourceString(System.String key)
    // Offset: 0x18018FC
    static ::Il2CppString* GetResourceString(::Il2CppString* key);
    // static System.String GetResourceString(System.String key, params System.Object[] values)
    // Offset: 0x180237C
    static ::Il2CppString* GetResourceString(::Il2CppString* key, ::Array<::Il2CppObject*>* values);
    // Creating initializer_list -> params proxy for: System.String GetResourceString(System.String key, params System.Object[] values)
    static ::Il2CppString* GetResourceString(::Il2CppString* key, std::initializer_list<::Il2CppObject*> values);
    // Creating TArgs -> initializer_list proxy for: System.String GetResourceString(System.String key, params System.Object[] values)
    template<class ...TParams>
    static ::Il2CppString* GetResourceString(::Il2CppString* key, TParams&&... values) {
      return GetResourceString(key, {values...});
    }
    // static System.String GetResourceStringEncodingName(System.Int32 codePage)
    // Offset: 0x18072C8
    static ::Il2CppString* GetResourceStringEncodingName(int codePage);
    // static private System.String GetNewLine()
    // Offset: 0x1807438
    static ::Il2CppString* GetNewLine();
    // static System.String GetOSVersionString()
    // Offset: 0x18074B0
    static ::Il2CppString* GetOSVersionString();
    // static System.Version CreateVersionFromString(System.String info)
    // Offset: 0x1807568
    static System::Version* CreateVersionFromString(::Il2CppString* info);
    // static public System.Void Exit(System.Int32 exitCode)
    // Offset: 0x18077FC
    static void Exit(int exitCode);
    // static public System.String ExpandEnvironmentVariables(System.String name)
    // Offset: 0x1807800
    static ::Il2CppString* ExpandEnvironmentVariables(::Il2CppString* name);
    // static public System.String[] GetCommandLineArgs()
    // Offset: 0x1807BDC
    static ::Array<::Il2CppString*>* GetCommandLineArgs();
    // static System.String internalGetEnvironmentVariable_native(System.IntPtr variable)
    // Offset: 0x1807BE0
    static ::Il2CppString* internalGetEnvironmentVariable_native(System::IntPtr variable);
    // static System.String internalGetEnvironmentVariable(System.String variable)
    // Offset: 0x1807BE4
    static ::Il2CppString* internalGetEnvironmentVariable(::Il2CppString* variable);
    // static public System.String GetEnvironmentVariable(System.String variable)
    // Offset: 0x1807AB4
    static ::Il2CppString* GetEnvironmentVariable(::Il2CppString* variable);
    // static private System.Collections.Hashtable GetEnvironmentVariablesNoCase()
    // Offset: 0x1807AD4
    static System::Collections::Hashtable* GetEnvironmentVariablesNoCase();
    // static public System.String GetFolderPath(System.Environment/System.SpecialFolder folder)
    // Offset: 0x1807C84
    static ::Il2CppString* GetFolderPath(System::Environment::SpecialFolder folder);
    // static private System.String GetWindowsFolderPath(System.Int32 folder)
    // Offset: 0x1807CD0
    static ::Il2CppString* GetWindowsFolderPath(int folder);
    // static public System.String GetFolderPath(System.Environment/System.SpecialFolder folder, System.Environment/System.SpecialFolderOption option)
    // Offset: 0x1807C8C
    static ::Il2CppString* GetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option);
    // static private System.String ReadXdgUserDir(System.String config_dir, System.String home_dir, System.String key, System.String fallback)
    // Offset: 0x18080E0
    static ::Il2CppString* ReadXdgUserDir(::Il2CppString* config_dir, ::Il2CppString* home_dir, ::Il2CppString* key, ::Il2CppString* fallback);
    // static System.String UnixGetFolderPath(System.Environment/System.SpecialFolder folder, System.Environment/System.SpecialFolderOption option)
    // Offset: 0x1807CD4
    static ::Il2CppString* UnixGetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option);
    // static public System.String[] GetLogicalDrives()
    // Offset: 0x1808528
    static ::Array<::Il2CppString*>* GetLogicalDrives();
    // static public System.Void FailFast(System.String message, System.Exception exception)
    // Offset: 0x1808530
    static void FailFast(::Il2CppString* message, System::Exception* exception);
    // static private System.String[] GetLogicalDrivesInternal()
    // Offset: 0x180852C
    static ::Array<::Il2CppString*>* GetLogicalDrivesInternal();
    // static private System.String[] GetEnvironmentVariableNames()
    // Offset: 0x1807C80
    static ::Array<::Il2CppString*>* GetEnvironmentVariableNames();
    // static System.String GetMachineConfigPath()
    // Offset: 0x18085F4
    static ::Il2CppString* GetMachineConfigPath();
    // static System.String internalGetHome()
    // Offset: 0x1808524
    static ::Il2CppString* internalGetHome();
    // static System.Int32 GetPageSize()
    // Offset: 0x18085F8
    static int GetPageSize();
    // static System.String GetStackTrace(System.Exception e, System.Boolean needFileInfo)
    // Offset: 0x1808638
    static ::Il2CppString* GetStackTrace(System::Exception* e, bool needFileInfo);
  }; // System.Environment
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Environment*, "System", "Environment");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Environment::get_CurrentDirectory
// Il2CppName: get_CurrentDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_CurrentDirectory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_CurrentDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_CurrentManagedThreadId
// Il2CppName: get_CurrentManagedThreadId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&System::Environment::get_CurrentManagedThreadId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_CurrentManagedThreadId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_HasShutdownStarted
// Il2CppName: get_HasShutdownStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Environment::get_HasShutdownStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_HasShutdownStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_MachineName
// Il2CppName: get_MachineName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_MachineName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_MachineName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_NewLine
// Il2CppName: get_NewLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_NewLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_NewLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_Platform
// Il2CppName: get_Platform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::PlatformID (*)()>(&System::Environment::get_Platform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_Platform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_OSVersion
// Il2CppName: get_OSVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::OperatingSystem* (*)()>(&System::Environment::get_OSVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_OSVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_StackTrace
// Il2CppName: get_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_StackTrace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_TickCount
// Il2CppName: get_TickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&System::Environment::get_TickCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_TickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_UserDomainName
// Il2CppName: get_UserDomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_UserDomainName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_UserDomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_UserName
// Il2CppName: get_UserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::get_UserName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_UserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_Is64BitProcess
// Il2CppName: get_Is64BitProcess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Environment::get_Is64BitProcess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_Is64BitProcess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_ProcessorCount
// Il2CppName: get_ProcessorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&System::Environment::get_ProcessorCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_ProcessorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_IsRunningOnWindows
// Il2CppName: get_IsRunningOnWindows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Environment::get_IsRunningOnWindows)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_IsRunningOnWindows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::get_IsUnix
// Il2CppName: get_IsUnix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Environment::get_IsUnix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "get_IsUnix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetResourceString
// Il2CppName: GetResourceString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Environment::GetResourceString)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetResourceString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Environment::GetResourceString
// Il2CppName: GetResourceString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&System::Environment::GetResourceString)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetResourceString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, values});
  }
};
// Writing MetadataGetter for method: System::Environment::GetResourceStringEncodingName
// Il2CppName: GetResourceStringEncodingName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&System::Environment::GetResourceStringEncodingName)> {
  static const MethodInfo* get() {
    static auto* codePage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetResourceStringEncodingName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codePage});
  }
};
// Writing MetadataGetter for method: System::Environment::GetNewLine
// Il2CppName: GetNewLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::GetNewLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetNewLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetOSVersionString
// Il2CppName: GetOSVersionString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::GetOSVersionString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetOSVersionString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::CreateVersionFromString
// Il2CppName: CreateVersionFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Version* (*)(::Il2CppString*)>(&System::Environment::CreateVersionFromString)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "CreateVersionFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: System::Environment::Exit
// Il2CppName: Exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&System::Environment::Exit)> {
  static const MethodInfo* get() {
    static auto* exitCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "Exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exitCode});
  }
};
// Writing MetadataGetter for method: System::Environment::ExpandEnvironmentVariables
// Il2CppName: ExpandEnvironmentVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Environment::ExpandEnvironmentVariables)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "ExpandEnvironmentVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Environment::GetCommandLineArgs
// Il2CppName: GetCommandLineArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)()>(&System::Environment::GetCommandLineArgs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetCommandLineArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::internalGetEnvironmentVariable_native
// Il2CppName: internalGetEnvironmentVariable_native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&System::Environment::internalGetEnvironmentVariable_native)> {
  static const MethodInfo* get() {
    static auto* variable = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "internalGetEnvironmentVariable_native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{variable});
  }
};
// Writing MetadataGetter for method: System::Environment::internalGetEnvironmentVariable
// Il2CppName: internalGetEnvironmentVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Environment::internalGetEnvironmentVariable)> {
  static const MethodInfo* get() {
    static auto* variable = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "internalGetEnvironmentVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{variable});
  }
};
// Writing MetadataGetter for method: System::Environment::GetEnvironmentVariable
// Il2CppName: GetEnvironmentVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&System::Environment::GetEnvironmentVariable)> {
  static const MethodInfo* get() {
    static auto* variable = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetEnvironmentVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{variable});
  }
};
// Writing MetadataGetter for method: System::Environment::GetEnvironmentVariablesNoCase
// Il2CppName: GetEnvironmentVariablesNoCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Hashtable* (*)()>(&System::Environment::GetEnvironmentVariablesNoCase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetEnvironmentVariablesNoCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetFolderPath
// Il2CppName: GetFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Environment::SpecialFolder)>(&System::Environment::GetFolderPath)> {
  static const MethodInfo* get() {
    static auto* folder = &::il2cpp_utils::GetClassFromName("System", "Environment/SpecialFolder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{folder});
  }
};
// Writing MetadataGetter for method: System::Environment::GetWindowsFolderPath
// Il2CppName: GetWindowsFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&System::Environment::GetWindowsFolderPath)> {
  static const MethodInfo* get() {
    static auto* folder = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetWindowsFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{folder});
  }
};
// Writing MetadataGetter for method: System::Environment::GetFolderPath
// Il2CppName: GetFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Environment::SpecialFolder, System::Environment::SpecialFolderOption)>(&System::Environment::GetFolderPath)> {
  static const MethodInfo* get() {
    static auto* folder = &::il2cpp_utils::GetClassFromName("System", "Environment/SpecialFolder")->byval_arg;
    static auto* option = &::il2cpp_utils::GetClassFromName("System", "Environment/SpecialFolderOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{folder, option});
  }
};
// Writing MetadataGetter for method: System::Environment::ReadXdgUserDir
// Il2CppName: ReadXdgUserDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&System::Environment::ReadXdgUserDir)> {
  static const MethodInfo* get() {
    static auto* config_dir = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* home_dir = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fallback = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "ReadXdgUserDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{config_dir, home_dir, key, fallback});
  }
};
// Writing MetadataGetter for method: System::Environment::UnixGetFolderPath
// Il2CppName: UnixGetFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Environment::SpecialFolder, System::Environment::SpecialFolderOption)>(&System::Environment::UnixGetFolderPath)> {
  static const MethodInfo* get() {
    static auto* folder = &::il2cpp_utils::GetClassFromName("System", "Environment/SpecialFolder")->byval_arg;
    static auto* option = &::il2cpp_utils::GetClassFromName("System", "Environment/SpecialFolderOption")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "UnixGetFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{folder, option});
  }
};
// Writing MetadataGetter for method: System::Environment::GetLogicalDrives
// Il2CppName: GetLogicalDrives
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)()>(&System::Environment::GetLogicalDrives)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetLogicalDrives", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::FailFast
// Il2CppName: FailFast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Exception*)>(&System::Environment::FailFast)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "FailFast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, exception});
  }
};
// Writing MetadataGetter for method: System::Environment::GetLogicalDrivesInternal
// Il2CppName: GetLogicalDrivesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)()>(&System::Environment::GetLogicalDrivesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetLogicalDrivesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetEnvironmentVariableNames
// Il2CppName: GetEnvironmentVariableNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)()>(&System::Environment::GetEnvironmentVariableNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetEnvironmentVariableNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetMachineConfigPath
// Il2CppName: GetMachineConfigPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::GetMachineConfigPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetMachineConfigPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::internalGetHome
// Il2CppName: internalGetHome
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&System::Environment::internalGetHome)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "internalGetHome", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetPageSize
// Il2CppName: GetPageSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&System::Environment::GetPageSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetPageSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Environment::GetStackTrace
// Il2CppName: GetStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Exception*, bool)>(&System::Environment::GetStackTrace)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* needFileInfo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Environment*), "GetStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, needFileInfo});
  }
};
