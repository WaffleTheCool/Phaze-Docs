// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CameraEvent
  struct CameraEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.CameraEventUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class CameraEventUtils : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: CameraEventUtils
    CameraEventUtils() noexcept {}
    // static public System.Boolean IsValid(UnityEngine.Rendering.CameraEvent value)
    // Offset: 0x1C732F4
    static bool IsValid(UnityEngine::Rendering::CameraEvent value);
  }; // UnityEngine.Rendering.CameraEventUtils
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Rendering::CameraEventUtils*, "UnityEngine.Rendering", "CameraEventUtils");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::CameraEventUtils::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Rendering::CameraEvent)>(&UnityEngine::Rendering::CameraEventUtils::IsValid)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CameraEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::CameraEventUtils*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
