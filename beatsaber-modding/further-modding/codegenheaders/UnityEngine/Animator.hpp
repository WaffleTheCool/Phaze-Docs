// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: UnityEngine.AnimatorClipInfo
#include "UnityEngine/AnimatorClipInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Forward declaring type: AnimatorUpdateMode
  struct AnimatorUpdateMode;
  // Forward declaring type: AnimatorControllerParameter
  class AnimatorControllerParameter;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimatorCullingMode
  struct AnimatorCullingMode;
  // Forward declaring type: AnimatorRecorderMode
  struct AnimatorRecorderMode;
  // Forward declaring type: RuntimeAnimatorController
  class RuntimeAnimatorController;
  // Forward declaring type: Avatar
  class Avatar;
  // Forward declaring type: AvatarIKGoal
  struct AvatarIKGoal;
  // Forward declaring type: AvatarIKHint
  struct AvatarIKHint;
  // Forward declaring type: HumanBodyBones
  struct HumanBodyBones;
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
  // Forward declaring type: StateMachineBehaviour
  class StateMachineBehaviour;
  // Forward declaring type: StateInfoIndex
  struct StateInfoIndex;
  // Forward declaring type: AnimatorStateInfo
  struct AnimatorStateInfo;
  // Forward declaring type: AnimatorTransitionInfo
  struct AnimatorTransitionInfo;
  // Forward declaring type: MatchTargetWeightMask
  struct MatchTargetWeightMask;
  // Forward declaring type: AvatarTarget
  struct AvatarTarget;
}
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: PlayableGraph
  struct PlayableGraph;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animator
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: DCE0C8
  // [NativeHeaderAttribute] Offset: DCE0C8
  // [NativeHeaderAttribute] Offset: DCE0C8
  // [UsedByNativeCodeAttribute] Offset: DCE0C8
  class Animator : public UnityEngine::Behaviour {
    public:
    // Creating value type constructor for type: Animator
    Animator() noexcept {}
    // public System.Boolean get_isOptimizable()
    // Offset: 0x23837A4
    bool get_isOptimizable();
    // public System.Boolean get_isHuman()
    // Offset: 0x23837E4
    bool get_isHuman();
    // public System.Boolean get_hasRootMotion()
    // Offset: 0x2383824
    bool get_hasRootMotion();
    // System.Boolean get_isRootPositionOrRotationControlledByCurves()
    // Offset: 0x2383864
    bool get_isRootPositionOrRotationControlledByCurves();
    // public System.Single get_humanScale()
    // Offset: 0x23838A4
    float get_humanScale();
    // public System.Boolean get_isInitialized()
    // Offset: 0x23838E4
    bool get_isInitialized();
    // public UnityEngine.Vector3 get_deltaPosition()
    // Offset: 0x23846C4
    UnityEngine::Vector3 get_deltaPosition();
    // public UnityEngine.Quaternion get_deltaRotation()
    // Offset: 0x2384774
    UnityEngine::Quaternion get_deltaRotation();
    // public UnityEngine.Vector3 get_velocity()
    // Offset: 0x2384820
    UnityEngine::Vector3 get_velocity();
    // public UnityEngine.Vector3 get_angularVelocity()
    // Offset: 0x23848D0
    UnityEngine::Vector3 get_angularVelocity();
    // public UnityEngine.Vector3 get_rootPosition()
    // Offset: 0x2384980
    UnityEngine::Vector3 get_rootPosition();
    // public System.Void set_rootPosition(UnityEngine.Vector3 value)
    // Offset: 0x2384A30
    void set_rootPosition(UnityEngine::Vector3 value);
    // public UnityEngine.Quaternion get_rootRotation()
    // Offset: 0x2384AD8
    UnityEngine::Quaternion get_rootRotation();
    // public System.Void set_rootRotation(UnityEngine.Quaternion value)
    // Offset: 0x2384B84
    void set_rootRotation(UnityEngine::Quaternion value);
    // public System.Boolean get_applyRootMotion()
    // Offset: 0x2384C2C
    bool get_applyRootMotion();
    // public System.Void set_applyRootMotion(System.Boolean value)
    // Offset: 0x2384C6C
    void set_applyRootMotion(bool value);
    // public System.Boolean get_linearVelocityBlending()
    // Offset: 0x2384CBC
    bool get_linearVelocityBlending();
    // public System.Void set_linearVelocityBlending(System.Boolean value)
    // Offset: 0x2384CFC
    void set_linearVelocityBlending(bool value);
    // public System.Boolean get_animatePhysics()
    // Offset: 0x2384D4C
    bool get_animatePhysics();
    // public System.Void set_animatePhysics(System.Boolean value)
    // Offset: 0x2384DD8
    void set_animatePhysics(bool value);
    // public UnityEngine.AnimatorUpdateMode get_updateMode()
    // Offset: 0x2384D98
    UnityEngine::AnimatorUpdateMode get_updateMode();
    // public System.Void set_updateMode(UnityEngine.AnimatorUpdateMode value)
    // Offset: 0x2384E30
    void set_updateMode(UnityEngine::AnimatorUpdateMode value);
    // public System.Boolean get_hasTransformHierarchy()
    // Offset: 0x2384E80
    bool get_hasTransformHierarchy();
    // System.Boolean get_allowConstantClipSamplingOptimization()
    // Offset: 0x2384EC0
    bool get_allowConstantClipSamplingOptimization();
    // System.Void set_allowConstantClipSamplingOptimization(System.Boolean value)
    // Offset: 0x2384F00
    void set_allowConstantClipSamplingOptimization(bool value);
    // public System.Single get_gravityWeight()
    // Offset: 0x2384F50
    float get_gravityWeight();
    // public UnityEngine.Vector3 get_bodyPosition()
    // Offset: 0x2384F90
    UnityEngine::Vector3 get_bodyPosition();
    // public System.Void set_bodyPosition(UnityEngine.Vector3 value)
    // Offset: 0x23850E8
    void set_bodyPosition(UnityEngine::Vector3 value);
    // UnityEngine.Vector3 get_bodyPositionInternal()
    // Offset: 0x2385088
    UnityEngine::Vector3 get_bodyPositionInternal();
    // System.Void set_bodyPositionInternal(UnityEngine.Vector3 value)
    // Offset: 0x2385134
    void set_bodyPositionInternal(UnityEngine::Vector3 value);
    // public UnityEngine.Quaternion get_bodyRotation()
    // Offset: 0x238522C
    UnityEngine::Quaternion get_bodyRotation();
    // public System.Void set_bodyRotation(UnityEngine.Quaternion value)
    // Offset: 0x23852AC
    void set_bodyRotation(UnityEngine::Quaternion value);
    // UnityEngine.Quaternion get_bodyRotationInternal()
    // Offset: 0x2385250
    UnityEngine::Quaternion get_bodyRotationInternal();
    // System.Void set_bodyRotationInternal(UnityEngine.Quaternion value)
    // Offset: 0x2385300
    void set_bodyRotationInternal(UnityEngine::Quaternion value);
    // public System.Boolean get_stabilizeFeet()
    // Offset: 0x2386564
    bool get_stabilizeFeet();
    // public System.Void set_stabilizeFeet(System.Boolean value)
    // Offset: 0x23865A4
    void set_stabilizeFeet(bool value);
    // public System.Int32 get_layerCount()
    // Offset: 0x23865F4
    int get_layerCount();
    // public UnityEngine.AnimatorControllerParameter[] get_parameters()
    // Offset: 0x2386DA8
    ::Array<UnityEngine::AnimatorControllerParameter*>* get_parameters();
    // public System.Int32 get_parameterCount()
    // Offset: 0x2386DE8
    int get_parameterCount();
    // public System.Single get_feetPivotActive()
    // Offset: 0x2386F8C
    float get_feetPivotActive();
    // public System.Void set_feetPivotActive(System.Single value)
    // Offset: 0x2386FCC
    void set_feetPivotActive(float value);
    // public System.Single get_pivotWeight()
    // Offset: 0x238701C
    float get_pivotWeight();
    // public UnityEngine.Vector3 get_pivotPosition()
    // Offset: 0x238705C
    UnityEngine::Vector3 get_pivotPosition();
    // public System.Boolean get_isMatchingTarget()
    // Offset: 0x2387350
    bool get_isMatchingTarget();
    // public System.Single get_speed()
    // Offset: 0x2387390
    float get_speed();
    // public System.Void set_speed(System.Single value)
    // Offset: 0x23873D0
    void set_speed(float value);
    // public UnityEngine.Vector3 get_targetPosition()
    // Offset: 0x2388000
    UnityEngine::Vector3 get_targetPosition();
    // public UnityEngine.Quaternion get_targetRotation()
    // Offset: 0x23880B0
    UnityEngine::Quaternion get_targetRotation();
    // UnityEngine.Transform get_avatarRoot()
    // Offset: 0x23881B4
    UnityEngine::Transform* get_avatarRoot();
    // public UnityEngine.AnimatorCullingMode get_cullingMode()
    // Offset: 0x2388360
    UnityEngine::AnimatorCullingMode get_cullingMode();
    // public System.Void set_cullingMode(UnityEngine.AnimatorCullingMode value)
    // Offset: 0x23883A0
    void set_cullingMode(UnityEngine::AnimatorCullingMode value);
    // public System.Single get_playbackTime()
    // Offset: 0x2388470
    float get_playbackTime();
    // public System.Void set_playbackTime(System.Single value)
    // Offset: 0x23884B0
    void set_playbackTime(float value);
    // public System.Single get_recorderStartTime()
    // Offset: 0x2388590
    float get_recorderStartTime();
    // public System.Void set_recorderStartTime(System.Single value)
    // Offset: 0x2388610
    void set_recorderStartTime(float value);
    // public System.Single get_recorderStopTime()
    // Offset: 0x2388614
    float get_recorderStopTime();
    // public System.Void set_recorderStopTime(System.Single value)
    // Offset: 0x2388694
    void set_recorderStopTime(float value);
    // public UnityEngine.AnimatorRecorderMode get_recorderMode()
    // Offset: 0x2388698
    UnityEngine::AnimatorRecorderMode get_recorderMode();
    // public UnityEngine.RuntimeAnimatorController get_runtimeAnimatorController()
    // Offset: 0x23886D8
    UnityEngine::RuntimeAnimatorController* get_runtimeAnimatorController();
    // public System.Void set_runtimeAnimatorController(UnityEngine.RuntimeAnimatorController value)
    // Offset: 0x2388718
    void set_runtimeAnimatorController(UnityEngine::RuntimeAnimatorController* value);
    // public System.Boolean get_hasBoundPlayables()
    // Offset: 0x2388768
    bool get_hasBoundPlayables();
    // public UnityEngine.Avatar get_avatar()
    // Offset: 0x2388840
    UnityEngine::Avatar* get_avatar();
    // public System.Void set_avatar(UnityEngine.Avatar value)
    // Offset: 0x2388880
    void set_avatar(UnityEngine::Avatar* value);
    // public UnityEngine.Playables.PlayableGraph get_playableGraph()
    // Offset: 0x2388910
    UnityEngine::Playables::PlayableGraph get_playableGraph();
    // public System.Boolean get_layersAffectMassCenter()
    // Offset: 0x2388A38
    bool get_layersAffectMassCenter();
    // public System.Void set_layersAffectMassCenter(System.Boolean value)
    // Offset: 0x2388A78
    void set_layersAffectMassCenter(bool value);
    // public System.Single get_leftFeetBottomHeight()
    // Offset: 0x2388AC8
    float get_leftFeetBottomHeight();
    // public System.Single get_rightFeetBottomHeight()
    // Offset: 0x2388B08
    float get_rightFeetBottomHeight();
    // System.Boolean get_supportsOnAnimatorMove()
    // Offset: 0x2388B48
    bool get_supportsOnAnimatorMove();
    // public System.Boolean get_logWarnings()
    // Offset: 0x23889B8
    bool get_logWarnings();
    // public System.Void set_logWarnings(System.Boolean value)
    // Offset: 0x2388F50
    void set_logWarnings(bool value);
    // public System.Boolean get_fireEvents()
    // Offset: 0x2388FA0
    bool get_fireEvents();
    // public System.Void set_fireEvents(System.Boolean value)
    // Offset: 0x2388FE0
    void set_fireEvents(bool value);
    // public System.Boolean get_keepAnimatorControllerStateOnDisable()
    // Offset: 0x2389030
    bool get_keepAnimatorControllerStateOnDisable();
    // public System.Void set_keepAnimatorControllerStateOnDisable(System.Boolean value)
    // Offset: 0x2389070
    void set_keepAnimatorControllerStateOnDisable(bool value);
    // public System.Single GetFloat(System.String name)
    // Offset: 0x2383924
    float GetFloat(::Il2CppString* name);
    // public System.Single GetFloat(System.Int32 id)
    // Offset: 0x23839C4
    float GetFloat(int id);
    // public System.Void SetFloat(System.String name, System.Single value)
    // Offset: 0x2383A64
    void SetFloat(::Il2CppString* name, float value);
    // public System.Void SetFloat(System.String name, System.Single value, System.Single dampTime, System.Single deltaTime)
    // Offset: 0x2383B24
    void SetFloat(::Il2CppString* name, float value, float dampTime, float deltaTime);
    // public System.Void SetFloat(System.Int32 id, System.Single value)
    // Offset: 0x2383C14
    void SetFloat(int id, float value);
    // public System.Void SetFloat(System.Int32 id, System.Single value, System.Single dampTime, System.Single deltaTime)
    // Offset: 0x2383CD4
    void SetFloat(int id, float value, float dampTime, float deltaTime);
    // public System.Boolean GetBool(System.String name)
    // Offset: 0x2383DC4
    bool GetBool(::Il2CppString* name);
    // public System.Boolean GetBool(System.Int32 id)
    // Offset: 0x2383E64
    bool GetBool(int id);
    // public System.Void SetBool(System.String name, System.Boolean value)
    // Offset: 0x2383F04
    void SetBool(::Il2CppString* name, bool value);
    // public System.Void SetBool(System.Int32 id, System.Boolean value)
    // Offset: 0x2383FB4
    void SetBool(int id, bool value);
    // public System.Int32 GetInteger(System.String name)
    // Offset: 0x2384064
    int GetInteger(::Il2CppString* name);
    // public System.Int32 GetInteger(System.Int32 id)
    // Offset: 0x2384104
    int GetInteger(int id);
    // public System.Void SetInteger(System.String name, System.Int32 value)
    // Offset: 0x23841A4
    void SetInteger(::Il2CppString* name, int value);
    // public System.Void SetInteger(System.Int32 id, System.Int32 value)
    // Offset: 0x2384254
    void SetInteger(int id, int value);
    // public System.Void SetTrigger(System.String name)
    // Offset: 0x2384304
    void SetTrigger(::Il2CppString* name);
    // public System.Void SetTrigger(System.Int32 id)
    // Offset: 0x23843A4
    void SetTrigger(int id);
    // public System.Void ResetTrigger(System.String name)
    // Offset: 0x2384444
    void ResetTrigger(::Il2CppString* name);
    // public System.Void ResetTrigger(System.Int32 id)
    // Offset: 0x23844E4
    void ResetTrigger(int id);
    // public System.Boolean IsParameterControlledByCurve(System.String name)
    // Offset: 0x2384584
    bool IsParameterControlledByCurve(::Il2CppString* name);
    // public System.Boolean IsParameterControlledByCurve(System.Int32 id)
    // Offset: 0x2384624
    bool IsParameterControlledByCurve(int id);
    // public UnityEngine.Vector3 GetIKPosition(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x23853F8
    UnityEngine::Vector3 GetIKPosition(UnityEngine::AvatarIKGoal goal);
    // private UnityEngine.Vector3 GetGoalPosition(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x2385424
    UnityEngine::Vector3 GetGoalPosition(UnityEngine::AvatarIKGoal goal);
    // public System.Void SetIKPosition(UnityEngine.AvatarIKGoal goal, UnityEngine.Vector3 goalPosition)
    // Offset: 0x23854EC
    void SetIKPosition(UnityEngine::AvatarIKGoal goal, UnityEngine::Vector3 goalPosition);
    // private System.Void SetGoalPosition(UnityEngine.AvatarIKGoal goal, UnityEngine.Vector3 goalPosition)
    // Offset: 0x2385540
    void SetGoalPosition(UnityEngine::AvatarIKGoal goal, UnityEngine::Vector3 goalPosition);
    // public UnityEngine.Quaternion GetIKRotation(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x2385600
    UnityEngine::Quaternion GetIKRotation(UnityEngine::AvatarIKGoal goal);
    // private UnityEngine.Quaternion GetGoalRotation(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x238562C
    UnityEngine::Quaternion GetGoalRotation(UnityEngine::AvatarIKGoal goal);
    // public System.Void SetIKRotation(UnityEngine.AvatarIKGoal goal, UnityEngine.Quaternion goalRotation)
    // Offset: 0x23856F0
    void SetIKRotation(UnityEngine::AvatarIKGoal goal, UnityEngine::Quaternion goalRotation);
    // private System.Void SetGoalRotation(UnityEngine.AvatarIKGoal goal, UnityEngine.Quaternion goalRotation)
    // Offset: 0x238574C
    void SetGoalRotation(UnityEngine::AvatarIKGoal goal, UnityEngine::Quaternion goalRotation);
    // public System.Single GetIKPositionWeight(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x238580C
    float GetIKPositionWeight(UnityEngine::AvatarIKGoal goal);
    // private System.Single GetGoalWeightPosition(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x2385860
    float GetGoalWeightPosition(UnityEngine::AvatarIKGoal goal);
    // public System.Void SetIKPositionWeight(UnityEngine.AvatarIKGoal goal, System.Single value)
    // Offset: 0x23858B0
    void SetIKPositionWeight(UnityEngine::AvatarIKGoal goal, float value);
    // private System.Void SetGoalWeightPosition(UnityEngine.AvatarIKGoal goal, System.Single value)
    // Offset: 0x2385914
    void SetGoalWeightPosition(UnityEngine::AvatarIKGoal goal, float value);
    // public System.Single GetIKRotationWeight(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x2385974
    float GetIKRotationWeight(UnityEngine::AvatarIKGoal goal);
    // private System.Single GetGoalWeightRotation(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x23859C8
    float GetGoalWeightRotation(UnityEngine::AvatarIKGoal goal);
    // public System.Void SetIKRotationWeight(UnityEngine.AvatarIKGoal goal, System.Single value)
    // Offset: 0x2385A18
    void SetIKRotationWeight(UnityEngine::AvatarIKGoal goal, float value);
    // private System.Void SetGoalWeightRotation(UnityEngine.AvatarIKGoal goal, System.Single value)
    // Offset: 0x2385A7C
    void SetGoalWeightRotation(UnityEngine::AvatarIKGoal goal, float value);
    // public UnityEngine.Vector3 GetIKHintPosition(UnityEngine.AvatarIKHint hint)
    // Offset: 0x2385ADC
    UnityEngine::Vector3 GetIKHintPosition(UnityEngine::AvatarIKHint hint);
    // private UnityEngine.Vector3 GetHintPosition(UnityEngine.AvatarIKHint hint)
    // Offset: 0x2385B08
    UnityEngine::Vector3 GetHintPosition(UnityEngine::AvatarIKHint hint);
    // public System.Void SetIKHintPosition(UnityEngine.AvatarIKHint hint, UnityEngine.Vector3 hintPosition)
    // Offset: 0x2385BD0
    void SetIKHintPosition(UnityEngine::AvatarIKHint hint, UnityEngine::Vector3 hintPosition);
    // private System.Void SetHintPosition(UnityEngine.AvatarIKHint hint, UnityEngine.Vector3 hintPosition)
    // Offset: 0x2385C24
    void SetHintPosition(UnityEngine::AvatarIKHint hint, UnityEngine::Vector3 hintPosition);
    // public System.Single GetIKHintPositionWeight(UnityEngine.AvatarIKHint hint)
    // Offset: 0x2385CE4
    float GetIKHintPositionWeight(UnityEngine::AvatarIKHint hint);
    // private System.Single GetHintWeightPosition(UnityEngine.AvatarIKHint hint)
    // Offset: 0x2385D38
    float GetHintWeightPosition(UnityEngine::AvatarIKHint hint);
    // public System.Void SetIKHintPositionWeight(UnityEngine.AvatarIKHint hint, System.Single value)
    // Offset: 0x2385D88
    void SetIKHintPositionWeight(UnityEngine::AvatarIKHint hint, float value);
    // private System.Void SetHintWeightPosition(UnityEngine.AvatarIKHint hint, System.Single value)
    // Offset: 0x2385DEC
    void SetHintWeightPosition(UnityEngine::AvatarIKHint hint, float value);
    // public System.Void SetLookAtPosition(UnityEngine.Vector3 lookAtPosition)
    // Offset: 0x2385E4C
    void SetLookAtPosition(UnityEngine::Vector3 lookAtPosition);
    // private System.Void SetLookAtPositionInternal(UnityEngine.Vector3 lookAtPosition)
    // Offset: 0x2385E98
    void SetLookAtPositionInternal(UnityEngine::Vector3 lookAtPosition);
    // public System.Void SetLookAtWeight(System.Single weight)
    // Offset: 0x2385F40
    void SetLookAtWeight(float weight);
    // public System.Void SetLookAtWeight(System.Single weight, System.Single bodyWeight)
    // Offset: 0x2386024
    void SetLookAtWeight(float weight, float bodyWeight);
    // public System.Void SetLookAtWeight(System.Single weight, System.Single bodyWeight, System.Single headWeight)
    // Offset: 0x238608C
    void SetLookAtWeight(float weight, float bodyWeight, float headWeight);
    // public System.Void SetLookAtWeight(System.Single weight, System.Single bodyWeight, System.Single headWeight, System.Single eyesWeight)
    // Offset: 0x2386100
    void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight);
    // public System.Void SetLookAtWeight(System.Single weight, System.Single bodyWeight, System.Single headWeight, System.Single eyesWeight, System.Single clampWeight)
    // Offset: 0x2386178
    void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight);
    // private System.Void SetLookAtWeightInternal(System.Single weight, System.Single bodyWeight, System.Single headWeight, System.Single eyesWeight, System.Single clampWeight)
    // Offset: 0x2385FA4
    void SetLookAtWeightInternal(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight);
    // public System.Void SetBoneLocalRotation(UnityEngine.HumanBodyBones humanBoneId, UnityEngine.Quaternion rotation)
    // Offset: 0x23861FC
    void SetBoneLocalRotation(UnityEngine::HumanBodyBones humanBoneId, UnityEngine::Quaternion rotation);
    // private System.Void SetBoneLocalRotationInternal(System.Int32 humanBoneId, UnityEngine.Quaternion rotation)
    // Offset: 0x23862C8
    void SetBoneLocalRotationInternal(int humanBoneId, UnityEngine::Quaternion rotation);
    // private UnityEngine.ScriptableObject GetBehaviour(System.Type type)
    // Offset: 0x2386388
    UnityEngine::ScriptableObject* GetBehaviour(System::Type* type);
    // public T GetBehaviour()
    // Offset: 0xFFFFFFFF
    template<class T>
    T GetBehaviour() {
      static_assert(std::is_convertible_v<T, UnityEngine::StateMachineBehaviour*>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBehaviour");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBehaviour", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      auto ___instance_arg = this;
      return ::il2cpp_utils::RunMethodThrow<T, false>(___instance_arg, ___generic__method);
    }
    // static private T[] ConvertStateMachineBehaviour(UnityEngine.ScriptableObject[] rawObjects)
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Array<T>* ConvertStateMachineBehaviour(::Array<UnityEngine::ScriptableObject*>* rawObjects) {
      static_assert(std::is_convertible_v<T, UnityEngine::StateMachineBehaviour*>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::ConvertStateMachineBehaviour");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animator", "ConvertStateMachineBehaviour", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawObjects)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodThrow<::Array<T>*, false>(static_cast<Il2CppClass*>(nullptr), ___generic__method, rawObjects);
    }
    // public T[] GetBehaviours()
    // Offset: 0xFFFFFFFF
    template<class T>
    ::Array<T>* GetBehaviours() {
      static_assert(std::is_convertible_v<T, UnityEngine::StateMachineBehaviour*>);
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBehaviours");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBehaviours", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      auto ___instance_arg = this;
      return ::il2cpp_utils::RunMethodThrow<::Array<T>*, false>(___instance_arg, ___generic__method);
    }
    // UnityEngine.ScriptableObject[] InternalGetBehaviours(System.Type type)
    // Offset: 0x23863D8
    ::Array<UnityEngine::ScriptableObject*>* InternalGetBehaviours(System::Type* type);
    // public UnityEngine.StateMachineBehaviour[] GetBehaviours(System.Int32 fullPathHash, System.Int32 layerIndex)
    // Offset: 0x2386428
    ::Array<UnityEngine::StateMachineBehaviour*>* GetBehaviours(int fullPathHash, int layerIndex);
    // UnityEngine.ScriptableObject[] InternalGetBehavioursByKey(System.Int32 fullPathHash, System.Int32 layerIndex, System.Type type)
    // Offset: 0x23864FC
    ::Array<UnityEngine::ScriptableObject*>* InternalGetBehavioursByKey(int fullPathHash, int layerIndex, System::Type* type);
    // public System.String GetLayerName(System.Int32 layerIndex)
    // Offset: 0x2386634
    ::Il2CppString* GetLayerName(int layerIndex);
    // public System.Int32 GetLayerIndex(System.String layerName)
    // Offset: 0x2386684
    int GetLayerIndex(::Il2CppString* layerName);
    // public System.Single GetLayerWeight(System.Int32 layerIndex)
    // Offset: 0x23866D4
    float GetLayerWeight(int layerIndex);
    // public System.Void SetLayerWeight(System.Int32 layerIndex, System.Single weight)
    // Offset: 0x2386724
    void SetLayerWeight(int layerIndex, float weight);
    // private System.Void GetAnimatorStateInfo(System.Int32 layerIndex, UnityEngine.StateInfoIndex stateInfoIndex, out UnityEngine.AnimatorStateInfo info)
    // Offset: 0x2386784
    void GetAnimatorStateInfo(int layerIndex, UnityEngine::StateInfoIndex stateInfoIndex, ByRef<UnityEngine::AnimatorStateInfo> info);
    // public UnityEngine.AnimatorStateInfo GetCurrentAnimatorStateInfo(System.Int32 layerIndex)
    // Offset: 0x23867EC
    UnityEngine::AnimatorStateInfo GetCurrentAnimatorStateInfo(int layerIndex);
    // public UnityEngine.AnimatorStateInfo GetNextAnimatorStateInfo(System.Int32 layerIndex)
    // Offset: 0x2386878
    UnityEngine::AnimatorStateInfo GetNextAnimatorStateInfo(int layerIndex);
    // private System.Void GetAnimatorTransitionInfo(System.Int32 layerIndex, out UnityEngine.AnimatorTransitionInfo info)
    // Offset: 0x2386904
    void GetAnimatorTransitionInfo(int layerIndex, ByRef<UnityEngine::AnimatorTransitionInfo> info);
    // public UnityEngine.AnimatorTransitionInfo GetAnimatorTransitionInfo(System.Int32 layerIndex)
    // Offset: 0x238695C
    UnityEngine::AnimatorTransitionInfo GetAnimatorTransitionInfo(int layerIndex);
    // System.Int32 GetAnimatorClipInfoCount(System.Int32 layerIndex, System.Boolean current)
    // Offset: 0x23869D0
    int GetAnimatorClipInfoCount(int layerIndex, bool current);
    // public System.Int32 GetCurrentAnimatorClipInfoCount(System.Int32 layerIndex)
    // Offset: 0x2386A28
    int GetCurrentAnimatorClipInfoCount(int layerIndex);
    // public System.Int32 GetNextAnimatorClipInfoCount(System.Int32 layerIndex)
    // Offset: 0x2386A7C
    int GetNextAnimatorClipInfoCount(int layerIndex);
    // public UnityEngine.AnimatorClipInfo[] GetCurrentAnimatorClipInfo(System.Int32 layerIndex)
    // Offset: 0x2386AD0
    ::Array<UnityEngine::AnimatorClipInfo>* GetCurrentAnimatorClipInfo(int layerIndex);
    // public UnityEngine.AnimatorClipInfo[] GetNextAnimatorClipInfo(System.Int32 layerIndex)
    // Offset: 0x2386B20
    ::Array<UnityEngine::AnimatorClipInfo>* GetNextAnimatorClipInfo(int layerIndex);
    // public System.Void GetCurrentAnimatorClipInfo(System.Int32 layerIndex, System.Collections.Generic.List`1<UnityEngine.AnimatorClipInfo> clips)
    // Offset: 0x2386B70
    void GetCurrentAnimatorClipInfo(int layerIndex, System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo>* clips);
    // private System.Void GetAnimatorClipInfoInternal(System.Int32 layerIndex, System.Boolean isCurrent, System.Object clips)
    // Offset: 0x2386C30
    void GetAnimatorClipInfoInternal(int layerIndex, bool isCurrent, ::Il2CppObject* clips);
    // public System.Void GetNextAnimatorClipInfo(System.Int32 layerIndex, System.Collections.Generic.List`1<UnityEngine.AnimatorClipInfo> clips)
    // Offset: 0x2386C98
    void GetNextAnimatorClipInfo(int layerIndex, System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo>* clips);
    // public System.Boolean IsInTransition(System.Int32 layerIndex)
    // Offset: 0x2386D58
    bool IsInTransition(int layerIndex);
    // public UnityEngine.AnimatorControllerParameter GetParameter(System.Int32 index)
    // Offset: 0x2386E28
    UnityEngine::AnimatorControllerParameter* GetParameter(int index);
    // private System.Void MatchTarget(UnityEngine.Vector3 matchPosition, UnityEngine.Quaternion matchRotation, System.Int32 targetBodyPart, UnityEngine.MatchTargetWeightMask weightMask, System.Single startNormalizedTime, System.Single targetNormalizedTime, System.Boolean completeMatch)
    // Offset: 0x238710C
    void MatchTarget(UnityEngine::Vector3 matchPosition, UnityEngine::Quaternion matchRotation, int targetBodyPart, UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch);
    // public System.Void MatchTarget(UnityEngine.Vector3 matchPosition, UnityEngine.Quaternion matchRotation, UnityEngine.AvatarTarget targetBodyPart, UnityEngine.MatchTargetWeightMask weightMask, System.Single startNormalizedTime)
    // Offset: 0x2387244
    void MatchTarget(UnityEngine::Vector3 matchPosition, UnityEngine::Quaternion matchRotation, UnityEngine::AvatarTarget targetBodyPart, UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime);
    // public System.Void MatchTarget(UnityEngine.Vector3 matchPosition, UnityEngine.Quaternion matchRotation, UnityEngine.AvatarTarget targetBodyPart, UnityEngine.MatchTargetWeightMask weightMask, System.Single startNormalizedTime, System.Single targetNormalizedTime)
    // Offset: 0x238727C
    void MatchTarget(UnityEngine::Vector3 matchPosition, UnityEngine::Quaternion matchRotation, UnityEngine::AvatarTarget targetBodyPart, UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime);
    // public System.Void MatchTarget(UnityEngine.Vector3 matchPosition, UnityEngine.Quaternion matchRotation, UnityEngine.AvatarTarget targetBodyPart, UnityEngine.MatchTargetWeightMask weightMask, System.Single startNormalizedTime, System.Single targetNormalizedTime, System.Boolean completeMatch)
    // Offset: 0x238729C
    void MatchTarget(UnityEngine::Vector3 matchPosition, UnityEngine::Quaternion matchRotation, UnityEngine::AvatarTarget targetBodyPart, UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch);
    // public System.Void InterruptMatchTarget()
    // Offset: 0x23872BC
    void InterruptMatchTarget();
    // public System.Void InterruptMatchTarget(System.Boolean completeMatch)
    // Offset: 0x2387300
    void InterruptMatchTarget(bool completeMatch);
    // public System.Void ForceStateNormalizedTime(System.Single normalizedTime)
    // Offset: 0x2387420
    void ForceStateNormalizedTime(float normalizedTime);
    // public System.Void CrossFadeInFixedTime(System.String stateName, System.Single fixedTransitionDuration)
    // Offset: 0x23874E0
    void CrossFadeInFixedTime(::Il2CppString* stateName, float fixedTransitionDuration);
    // public System.Void CrossFadeInFixedTime(System.String stateName, System.Single fixedTransitionDuration, System.Int32 layer)
    // Offset: 0x2387638
    void CrossFadeInFixedTime(::Il2CppString* stateName, float fixedTransitionDuration, int layer);
    // public System.Void CrossFadeInFixedTime(System.String stateName, System.Single fixedTransitionDuration, System.Int32 layer, System.Single fixedTimeOffset)
    // Offset: 0x23876D4
    void CrossFadeInFixedTime(::Il2CppString* stateName, float fixedTransitionDuration, int layer, float fixedTimeOffset);
    // public System.Void CrossFadeInFixedTime(System.String stateName, System.Single fixedTransitionDuration, System.Int32 layer, System.Single fixedTimeOffset, System.Single normalizedTransitionTime)
    // Offset: 0x2387774
    void CrossFadeInFixedTime(::Il2CppString* stateName, float fixedTransitionDuration, int layer, float fixedTimeOffset, float normalizedTransitionTime);
    // public System.Void CrossFadeInFixedTime(System.Int32 stateHashName, System.Single fixedTransitionDuration, System.Int32 layer, System.Single fixedTimeOffset)
    // Offset: 0x2387820
    void CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer, float fixedTimeOffset);
    // public System.Void CrossFadeInFixedTime(System.Int32 stateHashName, System.Single fixedTransitionDuration, System.Int32 layer)
    // Offset: 0x2387894
    void CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer);
    // public System.Void CrossFadeInFixedTime(System.Int32 stateHashName, System.Single fixedTransitionDuration)
    // Offset: 0x2387904
    void CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration);
    // public System.Void CrossFadeInFixedTime(System.Int32 stateHashName, System.Single fixedTransitionDuration, System.Int32 layer, System.Single fixedTimeOffset, System.Single normalizedTransitionTime)
    // Offset: 0x23875B8
    void CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer, float fixedTimeOffset, float normalizedTransitionTime);
    // public System.Void WriteDefaultValues()
    // Offset: 0x2387970
    void WriteDefaultValues();
    // public System.Void CrossFade(System.String stateName, System.Single normalizedTransitionDuration, System.Int32 layer, System.Single normalizedTimeOffset)
    // Offset: 0x23879B0
    void CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset);
    // public System.Void CrossFade(System.String stateName, System.Single normalizedTransitionDuration, System.Int32 layer)
    // Offset: 0x2387A64
    void CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer);
    // public System.Void CrossFade(System.String stateName, System.Single normalizedTransitionDuration)
    // Offset: 0x2387A74
    void CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration);
    // public System.Void CrossFade(System.String stateName, System.Single normalizedTransitionDuration, System.Int32 layer, System.Single normalizedTimeOffset, System.Single normalizedTransitionTime)
    // Offset: 0x23879B8
    void CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime);
    // public System.Void CrossFade(System.Int32 stateHashName, System.Single normalizedTransitionDuration, System.Int32 layer, System.Single normalizedTimeOffset, System.Single normalizedTransitionTime)
    // Offset: 0x2387A88
    void CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime);
    // public System.Void CrossFade(System.Int32 stateHashName, System.Single normalizedTransitionDuration, System.Int32 layer, System.Single normalizedTimeOffset)
    // Offset: 0x2387B08
    void CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset);
    // public System.Void CrossFade(System.Int32 stateHashName, System.Single normalizedTransitionDuration, System.Int32 layer)
    // Offset: 0x2387B7C
    void CrossFade(int stateHashName, float normalizedTransitionDuration, int layer);
    // public System.Void CrossFade(System.Int32 stateHashName, System.Single normalizedTransitionDuration)
    // Offset: 0x2387BF0
    void CrossFade(int stateHashName, float normalizedTransitionDuration);
    // public System.Void PlayInFixedTime(System.String stateName, System.Int32 layer)
    // Offset: 0x2387C60
    void PlayInFixedTime(::Il2CppString* stateName, int layer);
    // public System.Void PlayInFixedTime(System.String stateName)
    // Offset: 0x2387D00
    void PlayInFixedTime(::Il2CppString* stateName);
    // public System.Void PlayInFixedTime(System.String stateName, System.Int32 layer, System.Single fixedTime)
    // Offset: 0x2387C6C
    void PlayInFixedTime(::Il2CppString* stateName, int layer, float fixedTime);
    // public System.Void PlayInFixedTime(System.Int32 stateNameHash, System.Int32 layer, System.Single fixedTime)
    // Offset: 0x2387D10
    void PlayInFixedTime(int stateNameHash, int layer, float fixedTime);
    // public System.Void PlayInFixedTime(System.Int32 stateNameHash, System.Int32 layer)
    // Offset: 0x2387D78
    void PlayInFixedTime(int stateNameHash, int layer);
    // public System.Void PlayInFixedTime(System.Int32 stateNameHash)
    // Offset: 0x2387DD8
    void PlayInFixedTime(int stateNameHash);
    // public System.Void Play(System.String stateName, System.Int32 layer)
    // Offset: 0x2387E34
    void Play(::Il2CppString* stateName, int layer);
    // public System.Void Play(System.String stateName)
    // Offset: 0x2387ED4
    void Play(::Il2CppString* stateName);
    // public System.Void Play(System.String stateName, System.Int32 layer, System.Single normalizedTime)
    // Offset: 0x2387E40
    void Play(::Il2CppString* stateName, int layer, float normalizedTime);
    // public System.Void Play(System.Int32 stateNameHash, System.Int32 layer, System.Single normalizedTime)
    // Offset: 0x2387478
    void Play(int stateNameHash, int layer, float normalizedTime);
    // public System.Void Play(System.Int32 stateNameHash, System.Int32 layer)
    // Offset: 0x2387EE4
    void Play(int stateNameHash, int layer);
    // public System.Void Play(System.Int32 stateNameHash)
    // Offset: 0x2387F44
    void Play(int stateNameHash);
    // public System.Void SetTarget(UnityEngine.AvatarTarget targetIndex, System.Single targetNormalizedTime)
    // Offset: 0x2387FA0
    void SetTarget(UnityEngine::AvatarTarget targetIndex, float targetNormalizedTime);
    // public System.Boolean IsControlled(UnityEngine.Transform transform)
    // Offset: 0x238815C
    bool IsControlled(UnityEngine::Transform* transform);
    // System.Boolean IsBoneTransform(UnityEngine.Transform transform)
    // Offset: 0x2388164
    bool IsBoneTransform(UnityEngine::Transform* transform);
    // public UnityEngine.Transform GetBoneTransform(UnityEngine.HumanBodyBones humanBoneId)
    // Offset: 0x23881F4
    UnityEngine::Transform* GetBoneTransform(UnityEngine::HumanBodyBones humanBoneId);
    // UnityEngine.Transform GetBoneTransformInternal(System.Int32 humanBoneId)
    // Offset: 0x2388310
    UnityEngine::Transform* GetBoneTransformInternal(int humanBoneId);
    // public System.Void StartPlayback()
    // Offset: 0x23883F0
    void StartPlayback();
    // public System.Void StopPlayback()
    // Offset: 0x2388430
    void StopPlayback();
    // public System.Void StartRecording(System.Int32 frameCount)
    // Offset: 0x2388500
    void StartRecording(int frameCount);
    // public System.Void StopRecording()
    // Offset: 0x2388550
    void StopRecording();
    // private System.Single GetRecorderStartTime()
    // Offset: 0x23885D0
    float GetRecorderStartTime();
    // private System.Single GetRecorderStopTime()
    // Offset: 0x2388654
    float GetRecorderStopTime();
    // System.Void ClearInternalControllerPlayable()
    // Offset: 0x23887A8
    void ClearInternalControllerPlayable();
    // public System.Boolean HasState(System.Int32 layerIndex, System.Int32 stateID)
    // Offset: 0x23887E8
    bool HasState(int layerIndex, int stateID);
    // static public System.Int32 StringToHash(System.String name)
    // Offset: 0x2387578
    static int StringToHash(::Il2CppString* name);
    // System.String GetStats()
    // Offset: 0x23888D0
    ::Il2CppString* GetStats();
    // private System.Void GetCurrentGraph(ref UnityEngine.Playables.PlayableGraph graph)
    // Offset: 0x2388968
    void GetCurrentGraph(ByRef<UnityEngine::Playables::PlayableGraph> graph);
    // private System.Void CheckIfInIKPass()
    // Offset: 0x2384FB4
    void CheckIfInIKPass();
    // private System.Boolean IsInIKPass()
    // Offset: 0x23889F8
    bool IsInIKPass();
    // private System.Void SetFloatString(System.String name, System.Single value)
    // Offset: 0x2383AC4
    void SetFloatString(::Il2CppString* name, float value);
    // private System.Void SetFloatID(System.Int32 id, System.Single value)
    // Offset: 0x2383C74
    void SetFloatID(int id, float value);
    // private System.Single GetFloatString(System.String name)
    // Offset: 0x2383974
    float GetFloatString(::Il2CppString* name);
    // private System.Single GetFloatID(System.Int32 id)
    // Offset: 0x2383A14
    float GetFloatID(int id);
    // private System.Void SetBoolString(System.String name, System.Boolean value)
    // Offset: 0x2383F5C
    void SetBoolString(::Il2CppString* name, bool value);
    // private System.Void SetBoolID(System.Int32 id, System.Boolean value)
    // Offset: 0x238400C
    void SetBoolID(int id, bool value);
    // private System.Boolean GetBoolString(System.String name)
    // Offset: 0x2383E14
    bool GetBoolString(::Il2CppString* name);
    // private System.Boolean GetBoolID(System.Int32 id)
    // Offset: 0x2383EB4
    bool GetBoolID(int id);
    // private System.Void SetIntegerString(System.String name, System.Int32 value)
    // Offset: 0x23841FC
    void SetIntegerString(::Il2CppString* name, int value);
    // private System.Void SetIntegerID(System.Int32 id, System.Int32 value)
    // Offset: 0x23842AC
    void SetIntegerID(int id, int value);
    // private System.Int32 GetIntegerString(System.String name)
    // Offset: 0x23840B4
    int GetIntegerString(::Il2CppString* name);
    // private System.Int32 GetIntegerID(System.Int32 id)
    // Offset: 0x2384154
    int GetIntegerID(int id);
    // private System.Void SetTriggerString(System.String name)
    // Offset: 0x2384354
    void SetTriggerString(::Il2CppString* name);
    // private System.Void SetTriggerID(System.Int32 id)
    // Offset: 0x23843F4
    void SetTriggerID(int id);
    // private System.Void ResetTriggerString(System.String name)
    // Offset: 0x2384494
    void ResetTriggerString(::Il2CppString* name);
    // private System.Void ResetTriggerID(System.Int32 id)
    // Offset: 0x2384534
    void ResetTriggerID(int id);
    // private System.Boolean IsParameterControlledByCurveString(System.String name)
    // Offset: 0x23845D4
    bool IsParameterControlledByCurveString(::Il2CppString* name);
    // private System.Boolean IsParameterControlledByCurveID(System.Int32 id)
    // Offset: 0x2384674
    bool IsParameterControlledByCurveID(int id);
    // private System.Void SetFloatStringDamp(System.String name, System.Single value, System.Single dampTime, System.Single deltaTime)
    // Offset: 0x2383B9C
    void SetFloatStringDamp(::Il2CppString* name, float value, float dampTime, float deltaTime);
    // private System.Void SetFloatIDDamp(System.Int32 id, System.Single value, System.Single dampTime, System.Single deltaTime)
    // Offset: 0x2383D4C
    void SetFloatIDDamp(int id, float value, float dampTime, float deltaTime);
    // System.Void OnUpdateModeChanged()
    // Offset: 0x2388B88
    void OnUpdateModeChanged();
    // System.Void OnCullingModeChanged()
    // Offset: 0x2388BC8
    void OnCullingModeChanged();
    // System.Void WriteDefaultPose()
    // Offset: 0x2388C08
    void WriteDefaultPose();
    // public System.Void Update(System.Single deltaTime)
    // Offset: 0x2388C48
    void Update(float deltaTime);
    // public System.Void Rebind()
    // Offset: 0x2388C98
    void Rebind();
    // private System.Void Rebind(System.Boolean writeDefaultValues)
    // Offset: 0x2388CDC
    void Rebind(bool writeDefaultValues);
    // public System.Void ApplyBuiltinRootMotion()
    // Offset: 0x2388D2C
    void ApplyBuiltinRootMotion();
    // System.Void EvaluateController()
    // Offset: 0x2388D6C
    void EvaluateController();
    // private System.Void EvaluateController(System.Single deltaTime)
    // Offset: 0x2388DB0
    void EvaluateController(float deltaTime);
    // System.String GetCurrentStateName(System.Int32 layerIndex)
    // Offset: 0x2388E00
    ::Il2CppString* GetCurrentStateName(int layerIndex);
    // System.String GetNextStateName(System.Int32 layerIndex)
    // Offset: 0x2388EAC
    ::Il2CppString* GetNextStateName(int layerIndex);
    // private System.String GetAnimatorStateName(System.Int32 layerIndex, System.Boolean current)
    // Offset: 0x2388E54
    ::Il2CppString* GetAnimatorStateName(int layerIndex, bool current);
    // System.String ResolveHash(System.Int32 hash)
    // Offset: 0x2388F00
    ::Il2CppString* ResolveHash(int hash);
    // public UnityEngine.Vector3 GetVector(System.String name)
    // Offset: 0x23890C0
    UnityEngine::Vector3 GetVector(::Il2CppString* name);
    // public UnityEngine.Vector3 GetVector(System.Int32 id)
    // Offset: 0x2389120
    UnityEngine::Vector3 GetVector(int id);
    // public System.Void SetVector(System.String name, UnityEngine.Vector3 value)
    // Offset: 0x2389180
    void SetVector(::Il2CppString* name, UnityEngine::Vector3 value);
    // public System.Void SetVector(System.Int32 id, UnityEngine.Vector3 value)
    // Offset: 0x2389184
    void SetVector(int id, UnityEngine::Vector3 value);
    // public UnityEngine.Quaternion GetQuaternion(System.String name)
    // Offset: 0x2389188
    UnityEngine::Quaternion GetQuaternion(::Il2CppString* name);
    // public UnityEngine.Quaternion GetQuaternion(System.Int32 id)
    // Offset: 0x23891E8
    UnityEngine::Quaternion GetQuaternion(int id);
    // public System.Void SetQuaternion(System.String name, UnityEngine.Quaternion value)
    // Offset: 0x2389248
    void SetQuaternion(::Il2CppString* name, UnityEngine::Quaternion value);
    // public System.Void SetQuaternion(System.Int32 id, UnityEngine.Quaternion value)
    // Offset: 0x238924C
    void SetQuaternion(int id, UnityEngine::Quaternion value);
    // private System.Void get_deltaPosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x2384724
    void get_deltaPosition_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void get_deltaRotation_Injected(out UnityEngine.Quaternion ret)
    // Offset: 0x23847D0
    void get_deltaRotation_Injected(ByRef<UnityEngine::Quaternion> ret);
    // private System.Void get_velocity_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x2384880
    void get_velocity_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void get_angularVelocity_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x2384930
    void get_angularVelocity_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void get_rootPosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x23849E0
    void get_rootPosition_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void set_rootPosition_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x2384A88
    void set_rootPosition_Injected(ByRef<UnityEngine::Vector3> value);
    // private System.Void get_rootRotation_Injected(out UnityEngine.Quaternion ret)
    // Offset: 0x2384B34
    void get_rootRotation_Injected(ByRef<UnityEngine::Quaternion> ret);
    // private System.Void set_rootRotation_Injected(ref UnityEngine.Quaternion value)
    // Offset: 0x2384BDC
    void set_rootRotation_Injected(ByRef<UnityEngine::Quaternion> value);
    // private System.Void get_bodyPositionInternal_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x238518C
    void get_bodyPositionInternal_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void set_bodyPositionInternal_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x23851DC
    void set_bodyPositionInternal_Injected(ByRef<UnityEngine::Vector3> value);
    // private System.Void get_bodyRotationInternal_Injected(out UnityEngine.Quaternion ret)
    // Offset: 0x2385358
    void get_bodyRotationInternal_Injected(ByRef<UnityEngine::Quaternion> ret);
    // private System.Void set_bodyRotationInternal_Injected(ref UnityEngine.Quaternion value)
    // Offset: 0x23853A8
    void set_bodyRotationInternal_Injected(ByRef<UnityEngine::Quaternion> value);
    // private System.Void GetGoalPosition_Injected(UnityEngine.AvatarIKGoal goal, out UnityEngine.Vector3 ret)
    // Offset: 0x2385494
    void GetGoalPosition_Injected(UnityEngine::AvatarIKGoal goal, ByRef<UnityEngine::Vector3> ret);
    // private System.Void SetGoalPosition_Injected(UnityEngine.AvatarIKGoal goal, ref UnityEngine.Vector3 goalPosition)
    // Offset: 0x23855A8
    void SetGoalPosition_Injected(UnityEngine::AvatarIKGoal goal, ByRef<UnityEngine::Vector3> goalPosition);
    // private System.Void GetGoalRotation_Injected(UnityEngine.AvatarIKGoal goal, out UnityEngine.Quaternion ret)
    // Offset: 0x2385698
    void GetGoalRotation_Injected(UnityEngine::AvatarIKGoal goal, ByRef<UnityEngine::Quaternion> ret);
    // private System.Void SetGoalRotation_Injected(UnityEngine.AvatarIKGoal goal, ref UnityEngine.Quaternion goalRotation)
    // Offset: 0x23857B4
    void SetGoalRotation_Injected(UnityEngine::AvatarIKGoal goal, ByRef<UnityEngine::Quaternion> goalRotation);
    // private System.Void GetHintPosition_Injected(UnityEngine.AvatarIKHint hint, out UnityEngine.Vector3 ret)
    // Offset: 0x2385B78
    void GetHintPosition_Injected(UnityEngine::AvatarIKHint hint, ByRef<UnityEngine::Vector3> ret);
    // private System.Void SetHintPosition_Injected(UnityEngine.AvatarIKHint hint, ref UnityEngine.Vector3 hintPosition)
    // Offset: 0x2385C8C
    void SetHintPosition_Injected(UnityEngine::AvatarIKHint hint, ByRef<UnityEngine::Vector3> hintPosition);
    // private System.Void SetLookAtPositionInternal_Injected(ref UnityEngine.Vector3 lookAtPosition)
    // Offset: 0x2385EF0
    void SetLookAtPositionInternal_Injected(ByRef<UnityEngine::Vector3> lookAtPosition);
    // private System.Void SetBoneLocalRotationInternal_Injected(System.Int32 humanBoneId, ref UnityEngine.Quaternion rotation)
    // Offset: 0x2386330
    void SetBoneLocalRotationInternal_Injected(int humanBoneId, ByRef<UnityEngine::Quaternion> rotation);
    // private System.Void get_pivotPosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x23870BC
    void get_pivotPosition_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void MatchTarget_Injected(ref UnityEngine.Vector3 matchPosition, ref UnityEngine.Quaternion matchRotation, System.Int32 targetBodyPart, ref UnityEngine.MatchTargetWeightMask weightMask, System.Single startNormalizedTime, System.Single targetNormalizedTime, System.Boolean completeMatch)
    // Offset: 0x23871AC
    void MatchTarget_Injected(ByRef<UnityEngine::Vector3> matchPosition, ByRef<UnityEngine::Quaternion> matchRotation, int targetBodyPart, ByRef<UnityEngine::MatchTargetWeightMask> weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch);
    // private System.Void get_targetPosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x2388060
    void get_targetPosition_Injected(ByRef<UnityEngine::Vector3> ret);
    // private System.Void get_targetRotation_Injected(out UnityEngine.Quaternion ret)
    // Offset: 0x238810C
    void get_targetRotation_Injected(ByRef<UnityEngine::Quaternion> ret);
    // public System.Void .ctor()
    // Offset: 0x2389250
    // Implemented from: UnityEngine.Behaviour
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Animator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Animator*, creationType>()));
    }
  }; // UnityEngine.Animator
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Animator*, "UnityEngine", "Animator");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animator::get_isOptimizable
// Il2CppName: get_isOptimizable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_isOptimizable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_isOptimizable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_isHuman
// Il2CppName: get_isHuman
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_isHuman)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_isHuman", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_hasRootMotion
// Il2CppName: get_hasRootMotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_hasRootMotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_hasRootMotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_isRootPositionOrRotationControlledByCurves
// Il2CppName: get_isRootPositionOrRotationControlledByCurves
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_isRootPositionOrRotationControlledByCurves)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_isRootPositionOrRotationControlledByCurves", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_humanScale
// Il2CppName: get_humanScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_humanScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_humanScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_isInitialized
// Il2CppName: get_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_deltaPosition
// Il2CppName: get_deltaPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_deltaPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_deltaPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_deltaRotation
// Il2CppName: get_deltaRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_deltaRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_deltaRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_velocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_angularVelocity
// Il2CppName: get_angularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_angularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_angularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_rootPosition
// Il2CppName: get_rootPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_rootPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_rootPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_rootPosition
// Il2CppName: set_rootPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3)>(&UnityEngine::Animator::set_rootPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_rootPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_rootRotation
// Il2CppName: get_rootRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_rootRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_rootRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_rootRotation
// Il2CppName: set_rootRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Quaternion)>(&UnityEngine::Animator::set_rootRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_rootRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_applyRootMotion
// Il2CppName: get_applyRootMotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_applyRootMotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_applyRootMotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_applyRootMotion
// Il2CppName: set_applyRootMotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_applyRootMotion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_applyRootMotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_linearVelocityBlending
// Il2CppName: get_linearVelocityBlending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_linearVelocityBlending)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_linearVelocityBlending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_linearVelocityBlending
// Il2CppName: set_linearVelocityBlending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_linearVelocityBlending)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_linearVelocityBlending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_animatePhysics
// Il2CppName: get_animatePhysics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_animatePhysics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_animatePhysics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_animatePhysics
// Il2CppName: set_animatePhysics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_animatePhysics)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_animatePhysics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_updateMode
// Il2CppName: get_updateMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorUpdateMode (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_updateMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_updateMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_updateMode
// Il2CppName: set_updateMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AnimatorUpdateMode)>(&UnityEngine::Animator::set_updateMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorUpdateMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_updateMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_hasTransformHierarchy
// Il2CppName: get_hasTransformHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_hasTransformHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_hasTransformHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_allowConstantClipSamplingOptimization
// Il2CppName: get_allowConstantClipSamplingOptimization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_allowConstantClipSamplingOptimization)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_allowConstantClipSamplingOptimization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_allowConstantClipSamplingOptimization
// Il2CppName: set_allowConstantClipSamplingOptimization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_allowConstantClipSamplingOptimization)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_allowConstantClipSamplingOptimization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_gravityWeight
// Il2CppName: get_gravityWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_gravityWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_gravityWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyPosition
// Il2CppName: get_bodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_bodyPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyPosition
// Il2CppName: set_bodyPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3)>(&UnityEngine::Animator::set_bodyPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyPositionInternal
// Il2CppName: get_bodyPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_bodyPositionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyPositionInternal
// Il2CppName: set_bodyPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3)>(&UnityEngine::Animator::set_bodyPositionInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyRotation
// Il2CppName: get_bodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_bodyRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyRotation
// Il2CppName: set_bodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Quaternion)>(&UnityEngine::Animator::set_bodyRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyRotationInternal
// Il2CppName: get_bodyRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_bodyRotationInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyRotationInternal
// Il2CppName: set_bodyRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Quaternion)>(&UnityEngine::Animator::set_bodyRotationInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_stabilizeFeet
// Il2CppName: get_stabilizeFeet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_stabilizeFeet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_stabilizeFeet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_stabilizeFeet
// Il2CppName: set_stabilizeFeet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_stabilizeFeet)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_stabilizeFeet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_layerCount
// Il2CppName: get_layerCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_layerCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_layerCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_parameters
// Il2CppName: get_parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::AnimatorControllerParameter*>* (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_parameterCount
// Il2CppName: get_parameterCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_parameterCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_parameterCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_feetPivotActive
// Il2CppName: get_feetPivotActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_feetPivotActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_feetPivotActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_feetPivotActive
// Il2CppName: set_feetPivotActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::set_feetPivotActive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_feetPivotActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_pivotWeight
// Il2CppName: get_pivotWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_pivotWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_pivotWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_pivotPosition
// Il2CppName: get_pivotPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_pivotPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_pivotPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_isMatchingTarget
// Il2CppName: get_isMatchingTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_isMatchingTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_isMatchingTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_speed
// Il2CppName: get_speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_speed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_speed
// Il2CppName: set_speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::set_speed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_targetPosition
// Il2CppName: get_targetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_targetPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_targetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_targetRotation
// Il2CppName: get_targetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_targetRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_targetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_avatarRoot
// Il2CppName: get_avatarRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_avatarRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_avatarRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_cullingMode
// Il2CppName: get_cullingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorCullingMode (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_cullingMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_cullingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_cullingMode
// Il2CppName: set_cullingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AnimatorCullingMode)>(&UnityEngine::Animator::set_cullingMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorCullingMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_cullingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_playbackTime
// Il2CppName: get_playbackTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_playbackTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_playbackTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_playbackTime
// Il2CppName: set_playbackTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::set_playbackTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_playbackTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_recorderStartTime
// Il2CppName: get_recorderStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_recorderStartTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_recorderStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_recorderStartTime
// Il2CppName: set_recorderStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::set_recorderStartTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_recorderStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_recorderStopTime
// Il2CppName: get_recorderStopTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_recorderStopTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_recorderStopTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_recorderStopTime
// Il2CppName: set_recorderStopTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::set_recorderStopTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_recorderStopTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_recorderMode
// Il2CppName: get_recorderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorRecorderMode (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_recorderMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_recorderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_runtimeAnimatorController
// Il2CppName: get_runtimeAnimatorController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RuntimeAnimatorController* (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_runtimeAnimatorController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_runtimeAnimatorController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_runtimeAnimatorController
// Il2CppName: set_runtimeAnimatorController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::RuntimeAnimatorController*)>(&UnityEngine::Animator::set_runtimeAnimatorController)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RuntimeAnimatorController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_runtimeAnimatorController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_hasBoundPlayables
// Il2CppName: get_hasBoundPlayables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_hasBoundPlayables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_hasBoundPlayables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_avatar
// Il2CppName: get_avatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Avatar* (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_avatar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_avatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_avatar
// Il2CppName: set_avatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Avatar*)>(&UnityEngine::Animator::set_avatar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Avatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_avatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_playableGraph
// Il2CppName: get_playableGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::PlayableGraph (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_playableGraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_playableGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_layersAffectMassCenter
// Il2CppName: get_layersAffectMassCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_layersAffectMassCenter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_layersAffectMassCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_layersAffectMassCenter
// Il2CppName: set_layersAffectMassCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_layersAffectMassCenter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_layersAffectMassCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_leftFeetBottomHeight
// Il2CppName: get_leftFeetBottomHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_leftFeetBottomHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_leftFeetBottomHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_rightFeetBottomHeight
// Il2CppName: get_rightFeetBottomHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_rightFeetBottomHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_rightFeetBottomHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_supportsOnAnimatorMove
// Il2CppName: get_supportsOnAnimatorMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_supportsOnAnimatorMove)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_supportsOnAnimatorMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_logWarnings
// Il2CppName: get_logWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_logWarnings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_logWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_logWarnings
// Il2CppName: set_logWarnings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_logWarnings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_logWarnings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_fireEvents
// Il2CppName: get_fireEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_fireEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_fireEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_fireEvents
// Il2CppName: set_fireEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_fireEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_fireEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_keepAnimatorControllerStateOnDisable
// Il2CppName: get_keepAnimatorControllerStateOnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::get_keepAnimatorControllerStateOnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable
// Il2CppName: set_keepAnimatorControllerStateOnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetFloat)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float)>(&UnityEngine::Animator::SetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, float, float)>(&UnityEngine::Animator::SetFloat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* dampTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, dampTime, deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float)>(&UnityEngine::Animator::SetFloat)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, float, float)>(&UnityEngine::Animator::SetFloat)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* dampTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value, dampTime, deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBool
// Il2CppName: GetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetBool)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBool
// Il2CppName: GetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetBool)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBool
// Il2CppName: SetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, bool)>(&UnityEngine::Animator::SetBool)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBool
// Il2CppName: SetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, bool)>(&UnityEngine::Animator::SetBool)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetInteger
// Il2CppName: GetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetInteger
// Il2CppName: GetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetInteger)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetInteger
// Il2CppName: SetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int)>(&UnityEngine::Animator::SetInteger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetInteger
// Il2CppName: SetInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::SetInteger)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetTrigger
// Il2CppName: SetTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::SetTrigger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetTrigger
// Il2CppName: SetTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::SetTrigger)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ResetTrigger
// Il2CppName: ResetTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::ResetTrigger)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ResetTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ResetTrigger
// Il2CppName: ResetTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::ResetTrigger)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ResetTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsParameterControlledByCurve
// Il2CppName: IsParameterControlledByCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::IsParameterControlledByCurve)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsParameterControlledByCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsParameterControlledByCurve
// Il2CppName: IsParameterControlledByCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::IsParameterControlledByCurve)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsParameterControlledByCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKPosition
// Il2CppName: GetIKPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetIKPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalPosition
// Il2CppName: GetGoalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetGoalPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKPosition
// Il2CppName: SetIKPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, UnityEngine::Vector3)>(&UnityEngine::Animator::SetIKPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalPosition
// Il2CppName: SetGoalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, UnityEngine::Vector3)>(&UnityEngine::Animator::SetGoalPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKRotation
// Il2CppName: GetIKRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetIKRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalRotation
// Il2CppName: GetGoalRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetGoalRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKRotation
// Il2CppName: SetIKRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetIKRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalRotation
// Il2CppName: SetGoalRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetGoalRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKPositionWeight
// Il2CppName: GetIKPositionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetIKPositionWeight)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKPositionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalWeightPosition
// Il2CppName: GetGoalWeightPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetGoalWeightPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalWeightPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKPositionWeight
// Il2CppName: SetIKPositionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, float)>(&UnityEngine::Animator::SetIKPositionWeight)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKPositionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalWeightPosition
// Il2CppName: SetGoalWeightPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, float)>(&UnityEngine::Animator::SetGoalWeightPosition)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalWeightPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKRotationWeight
// Il2CppName: GetIKRotationWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetIKRotationWeight)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKRotationWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalWeightRotation
// Il2CppName: GetGoalWeightRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal)>(&UnityEngine::Animator::GetGoalWeightRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalWeightRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKRotationWeight
// Il2CppName: SetIKRotationWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, float)>(&UnityEngine::Animator::SetIKRotationWeight)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKRotationWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalWeightRotation
// Il2CppName: SetGoalWeightRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, float)>(&UnityEngine::Animator::SetGoalWeightRotation)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalWeightRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKHintPosition
// Il2CppName: GetIKHintPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint)>(&UnityEngine::Animator::GetIKHintPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKHintPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetHintPosition
// Il2CppName: GetHintPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint)>(&UnityEngine::Animator::GetHintPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetHintPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKHintPosition
// Il2CppName: SetIKHintPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, UnityEngine::Vector3)>(&UnityEngine::Animator::SetIKHintPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* hintPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKHintPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, hintPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetHintPosition
// Il2CppName: SetHintPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, UnityEngine::Vector3)>(&UnityEngine::Animator::SetHintPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* hintPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetHintPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, hintPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIKHintPositionWeight
// Il2CppName: GetIKHintPositionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint)>(&UnityEngine::Animator::GetIKHintPositionWeight)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIKHintPositionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetHintWeightPosition
// Il2CppName: GetHintWeightPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint)>(&UnityEngine::Animator::GetHintWeightPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetHintWeightPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIKHintPositionWeight
// Il2CppName: SetIKHintPositionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, float)>(&UnityEngine::Animator::SetIKHintPositionWeight)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIKHintPositionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetHintWeightPosition
// Il2CppName: SetHintWeightPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, float)>(&UnityEngine::Animator::SetHintWeightPosition)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetHintWeightPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtPosition
// Il2CppName: SetLookAtPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3)>(&UnityEngine::Animator::SetLookAtPosition)> {
  static const MethodInfo* get() {
    static auto* lookAtPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lookAtPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtPositionInternal
// Il2CppName: SetLookAtPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3)>(&UnityEngine::Animator::SetLookAtPositionInternal)> {
  static const MethodInfo* get() {
    static auto* lookAtPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lookAtPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeight
// Il2CppName: SetLookAtWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::SetLookAtWeight)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeight
// Il2CppName: SetLookAtWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float, float)>(&UnityEngine::Animator::SetLookAtWeight)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bodyWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight, bodyWeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeight
// Il2CppName: SetLookAtWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float, float, float)>(&UnityEngine::Animator::SetLookAtWeight)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bodyWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* headWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight, bodyWeight, headWeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeight
// Il2CppName: SetLookAtWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float, float, float, float)>(&UnityEngine::Animator::SetLookAtWeight)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bodyWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* headWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eyesWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight, bodyWeight, headWeight, eyesWeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeight
// Il2CppName: SetLookAtWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float, float, float, float, float)>(&UnityEngine::Animator::SetLookAtWeight)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bodyWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* headWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eyesWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* clampWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight, bodyWeight, headWeight, eyesWeight, clampWeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtWeightInternal
// Il2CppName: SetLookAtWeightInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float, float, float, float, float)>(&UnityEngine::Animator::SetLookAtWeightInternal)> {
  static const MethodInfo* get() {
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* bodyWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* headWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* eyesWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* clampWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtWeightInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weight, bodyWeight, headWeight, eyesWeight, clampWeight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBoneLocalRotation
// Il2CppName: SetBoneLocalRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::HumanBodyBones, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetBoneLocalRotation)> {
  static const MethodInfo* get() {
    static auto* humanBoneId = &::il2cpp_utils::GetClassFromName("UnityEngine", "HumanBodyBones")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBoneLocalRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanBoneId, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBoneLocalRotationInternal
// Il2CppName: SetBoneLocalRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetBoneLocalRotationInternal)> {
  static const MethodInfo* get() {
    static auto* humanBoneId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBoneLocalRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanBoneId, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBehaviour
// Il2CppName: GetBehaviour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ScriptableObject* (UnityEngine::Animator::*)(System::Type*)>(&UnityEngine::Animator::GetBehaviour)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBehaviour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBehaviour
// Il2CppName: GetBehaviour
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Animator::ConvertStateMachineBehaviour
// Il2CppName: ConvertStateMachineBehaviour
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Animator::GetBehaviours
// Il2CppName: GetBehaviours
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Animator::InternalGetBehaviours
// Il2CppName: InternalGetBehaviours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::ScriptableObject*>* (UnityEngine::Animator::*)(System::Type*)>(&UnityEngine::Animator::InternalGetBehaviours)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "InternalGetBehaviours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBehaviours
// Il2CppName: GetBehaviours
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::StateMachineBehaviour*>* (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::GetBehaviours)> {
  static const MethodInfo* get() {
    static auto* fullPathHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBehaviours", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fullPathHash, layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::InternalGetBehavioursByKey
// Il2CppName: InternalGetBehavioursByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::ScriptableObject*>* (UnityEngine::Animator::*)(int, int, System::Type*)>(&UnityEngine::Animator::InternalGetBehavioursByKey)> {
  static const MethodInfo* get() {
    static auto* fullPathHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "InternalGetBehavioursByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fullPathHash, layerIndex, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetLayerName
// Il2CppName: GetLayerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetLayerName)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetLayerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetLayerIndex
// Il2CppName: GetLayerIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetLayerIndex)> {
  static const MethodInfo* get() {
    static auto* layerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetLayerIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetLayerWeight
// Il2CppName: GetLayerWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetLayerWeight)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetLayerWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLayerWeight
// Il2CppName: SetLayerWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float)>(&UnityEngine::Animator::SetLayerWeight)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLayerWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, weight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorStateInfo
// Il2CppName: GetAnimatorStateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, UnityEngine::StateInfoIndex, ByRef<UnityEngine::AnimatorStateInfo>)>(&UnityEngine::Animator::GetAnimatorStateInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stateInfoIndex = &::il2cpp_utils::GetClassFromName("UnityEngine", "StateInfoIndex")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorStateInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorStateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, stateInfoIndex, info});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentAnimatorStateInfo
// Il2CppName: GetCurrentAnimatorStateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorStateInfo (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetCurrentAnimatorStateInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentAnimatorStateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetNextAnimatorStateInfo
// Il2CppName: GetNextAnimatorStateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorStateInfo (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetNextAnimatorStateInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetNextAnimatorStateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorTransitionInfo
// Il2CppName: GetAnimatorTransitionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, ByRef<UnityEngine::AnimatorTransitionInfo>)>(&UnityEngine::Animator::GetAnimatorTransitionInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorTransitionInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorTransitionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, info});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorTransitionInfo
// Il2CppName: GetAnimatorTransitionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorTransitionInfo (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetAnimatorTransitionInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorTransitionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorClipInfoCount
// Il2CppName: GetAnimatorClipInfoCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(int, bool)>(&UnityEngine::Animator::GetAnimatorClipInfoCount)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* current = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorClipInfoCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, current});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentAnimatorClipInfoCount
// Il2CppName: GetCurrentAnimatorClipInfoCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetCurrentAnimatorClipInfoCount)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentAnimatorClipInfoCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetNextAnimatorClipInfoCount
// Il2CppName: GetNextAnimatorClipInfoCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetNextAnimatorClipInfoCount)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetNextAnimatorClipInfoCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentAnimatorClipInfo
// Il2CppName: GetCurrentAnimatorClipInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::AnimatorClipInfo>* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetCurrentAnimatorClipInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentAnimatorClipInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetNextAnimatorClipInfo
// Il2CppName: GetNextAnimatorClipInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::AnimatorClipInfo>* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetNextAnimatorClipInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetNextAnimatorClipInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentAnimatorClipInfo
// Il2CppName: GetCurrentAnimatorClipInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo>*)>(&UnityEngine::Animator::GetCurrentAnimatorClipInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* clips = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorClipInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentAnimatorClipInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, clips});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorClipInfoInternal
// Il2CppName: GetAnimatorClipInfoInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, bool, ::Il2CppObject*)>(&UnityEngine::Animator::GetAnimatorClipInfoInternal)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* isCurrent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* clips = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorClipInfoInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, isCurrent, clips});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetNextAnimatorClipInfo
// Il2CppName: GetNextAnimatorClipInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, System::Collections::Generic::List_1<UnityEngine::AnimatorClipInfo>*)>(&UnityEngine::Animator::GetNextAnimatorClipInfo)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* clips = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorClipInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetNextAnimatorClipInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, clips});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsInTransition
// Il2CppName: IsInTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::IsInTransition)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsInTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetParameter
// Il2CppName: GetParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimatorControllerParameter* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetParameter)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::MatchTarget
// Il2CppName: MatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3, UnityEngine::Quaternion, int, UnityEngine::MatchTargetWeightMask, float, float, bool)>(&UnityEngine::Animator::MatchTarget)> {
  static const MethodInfo* get() {
    static auto* matchPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* matchRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* targetBodyPart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* weightMask = &::il2cpp_utils::GetClassFromName("UnityEngine", "MatchTargetWeightMask")->byval_arg;
    static auto* startNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* completeMatch = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "MatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime, completeMatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::MatchTarget
// Il2CppName: MatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3, UnityEngine::Quaternion, UnityEngine::AvatarTarget, UnityEngine::MatchTargetWeightMask, float)>(&UnityEngine::Animator::MatchTarget)> {
  static const MethodInfo* get() {
    static auto* matchPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* matchRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* targetBodyPart = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarTarget")->byval_arg;
    static auto* weightMask = &::il2cpp_utils::GetClassFromName("UnityEngine", "MatchTargetWeightMask")->byval_arg;
    static auto* startNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "MatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::MatchTarget
// Il2CppName: MatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3, UnityEngine::Quaternion, UnityEngine::AvatarTarget, UnityEngine::MatchTargetWeightMask, float, float)>(&UnityEngine::Animator::MatchTarget)> {
  static const MethodInfo* get() {
    static auto* matchPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* matchRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* targetBodyPart = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarTarget")->byval_arg;
    static auto* weightMask = &::il2cpp_utils::GetClassFromName("UnityEngine", "MatchTargetWeightMask")->byval_arg;
    static auto* startNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "MatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::MatchTarget
// Il2CppName: MatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::Vector3, UnityEngine::Quaternion, UnityEngine::AvatarTarget, UnityEngine::MatchTargetWeightMask, float, float, bool)>(&UnityEngine::Animator::MatchTarget)> {
  static const MethodInfo* get() {
    static auto* matchPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* matchRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* targetBodyPart = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarTarget")->byval_arg;
    static auto* weightMask = &::il2cpp_utils::GetClassFromName("UnityEngine", "MatchTargetWeightMask")->byval_arg;
    static auto* startNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* completeMatch = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "MatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime, completeMatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::InterruptMatchTarget
// Il2CppName: InterruptMatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::InterruptMatchTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "InterruptMatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::InterruptMatchTarget
// Il2CppName: InterruptMatchTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::InterruptMatchTarget)> {
  static const MethodInfo* get() {
    static auto* completeMatch = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "InterruptMatchTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{completeMatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ForceStateNormalizedTime
// Il2CppName: ForceStateNormalizedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::ForceStateNormalizedTime)> {
  static const MethodInfo* get() {
    static auto* normalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ForceStateNormalizedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{normalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, fixedTransitionDuration});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, fixedTransitionDuration, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, fixedTransitionDuration, layer, fixedTimeOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int, float, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* normalizedTransitionTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, fixedTransitionDuration, layer, fixedTimeOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, fixedTransitionDuration, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, fixedTransitionDuration});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFadeInFixedTime
// Il2CppName: CrossFadeInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int, float, float)>(&UnityEngine::Animator::CrossFadeInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* normalizedTransitionTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFadeInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::WriteDefaultValues
// Il2CppName: WriteDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::WriteDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "WriteDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, normalizedTransitionDuration, layer, normalizedTimeOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, normalizedTransitionDuration, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, normalizedTransitionDuration});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, int, float, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* normalizedTransitionTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int, float, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* normalizedTransitionTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTimeOffset = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, int)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, normalizedTransitionDuration, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CrossFade
// Il2CppName: CrossFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float)>(&UnityEngine::Animator::CrossFade)> {
  static const MethodInfo* get() {
    static auto* stateHashName = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTransitionDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CrossFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateHashName, normalizedTransitionDuration});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int, float)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, layer, fixedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int, float)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fixedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash, layer, fixedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::PlayInFixedTime
// Il2CppName: PlayInFixedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::PlayInFixedTime)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "PlayInFixedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int, float)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateName, layer, normalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int, float)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* normalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash, layer, normalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash, layer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::Play)> {
  static const MethodInfo* get() {
    static auto* stateNameHash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateNameHash});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetTarget
// Il2CppName: SetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarTarget, float)>(&UnityEngine::Animator::SetTarget)> {
  static const MethodInfo* get() {
    static auto* targetIndex = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarTarget")->byval_arg;
    static auto* targetNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetIndex, targetNormalizedTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsControlled
// Il2CppName: IsControlled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(UnityEngine::Transform*)>(&UnityEngine::Animator::IsControlled)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsControlled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsBoneTransform
// Il2CppName: IsBoneTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(UnityEngine::Transform*)>(&UnityEngine::Animator::IsBoneTransform)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsBoneTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBoneTransform
// Il2CppName: GetBoneTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (UnityEngine::Animator::*)(UnityEngine::HumanBodyBones)>(&UnityEngine::Animator::GetBoneTransform)> {
  static const MethodInfo* get() {
    static auto* humanBoneId = &::il2cpp_utils::GetClassFromName("UnityEngine", "HumanBodyBones")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBoneTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanBoneId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBoneTransformInternal
// Il2CppName: GetBoneTransformInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetBoneTransformInternal)> {
  static const MethodInfo* get() {
    static auto* humanBoneId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBoneTransformInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanBoneId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::StartPlayback
// Il2CppName: StartPlayback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::StartPlayback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "StartPlayback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::StopPlayback
// Il2CppName: StopPlayback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::StopPlayback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "StopPlayback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::StartRecording
// Il2CppName: StartRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::StartRecording)> {
  static const MethodInfo* get() {
    static auto* frameCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "StartRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frameCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::StopRecording
// Il2CppName: StopRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::StopRecording)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "StopRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetRecorderStartTime
// Il2CppName: GetRecorderStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::GetRecorderStartTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetRecorderStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetRecorderStopTime
// Il2CppName: GetRecorderStopTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)()>(&UnityEngine::Animator::GetRecorderStopTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetRecorderStopTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ClearInternalControllerPlayable
// Il2CppName: ClearInternalControllerPlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::ClearInternalControllerPlayable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ClearInternalControllerPlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::HasState
// Il2CppName: HasState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::HasState)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stateID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "HasState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, stateID});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::StringToHash
// Il2CppName: StringToHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*)>(&UnityEngine::Animator::StringToHash)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "StringToHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetStats
// Il2CppName: GetStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)()>(&UnityEngine::Animator::GetStats)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentGraph
// Il2CppName: GetCurrentGraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Playables::PlayableGraph>)>(&UnityEngine::Animator::GetCurrentGraph)> {
  static const MethodInfo* get() {
    static auto* graph = &::il2cpp_utils::GetClassFromName("UnityEngine.Playables", "PlayableGraph")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentGraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{graph});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::CheckIfInIKPass
// Il2CppName: CheckIfInIKPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::CheckIfInIKPass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "CheckIfInIKPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsInIKPass
// Il2CppName: IsInIKPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)()>(&UnityEngine::Animator::IsInIKPass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsInIKPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloatString
// Il2CppName: SetFloatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float)>(&UnityEngine::Animator::SetFloatString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloatID
// Il2CppName: SetFloatID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float)>(&UnityEngine::Animator::SetFloatID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloatID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetFloatString
// Il2CppName: GetFloatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetFloatString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetFloatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetFloatID
// Il2CppName: GetFloatID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetFloatID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetFloatID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBoolString
// Il2CppName: SetBoolString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, bool)>(&UnityEngine::Animator::SetBoolString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBoolString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBoolID
// Il2CppName: SetBoolID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, bool)>(&UnityEngine::Animator::SetBoolID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBoolID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBoolString
// Il2CppName: GetBoolString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetBoolString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBoolString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetBoolID
// Il2CppName: GetBoolID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetBoolID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetBoolID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIntegerString
// Il2CppName: SetIntegerString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, int)>(&UnityEngine::Animator::SetIntegerString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIntegerString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetIntegerID
// Il2CppName: SetIntegerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, int)>(&UnityEngine::Animator::SetIntegerID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetIntegerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIntegerString
// Il2CppName: GetIntegerString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetIntegerString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIntegerString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetIntegerID
// Il2CppName: GetIntegerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetIntegerID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetIntegerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetTriggerString
// Il2CppName: SetTriggerString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::SetTriggerString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetTriggerString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetTriggerID
// Il2CppName: SetTriggerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::SetTriggerID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetTriggerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ResetTriggerString
// Il2CppName: ResetTriggerString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::ResetTriggerString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ResetTriggerString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ResetTriggerID
// Il2CppName: ResetTriggerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::ResetTriggerID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ResetTriggerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsParameterControlledByCurveString
// Il2CppName: IsParameterControlledByCurveString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::IsParameterControlledByCurveString)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsParameterControlledByCurveString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::IsParameterControlledByCurveID
// Il2CppName: IsParameterControlledByCurveID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::IsParameterControlledByCurveID)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "IsParameterControlledByCurveID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloatStringDamp
// Il2CppName: SetFloatStringDamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, float, float, float)>(&UnityEngine::Animator::SetFloatStringDamp)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* dampTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloatStringDamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value, dampTime, deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetFloatIDDamp
// Il2CppName: SetFloatIDDamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, float, float, float)>(&UnityEngine::Animator::SetFloatIDDamp)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* dampTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetFloatIDDamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value, dampTime, deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::OnUpdateModeChanged
// Il2CppName: OnUpdateModeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::OnUpdateModeChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "OnUpdateModeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::OnCullingModeChanged
// Il2CppName: OnCullingModeChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::OnCullingModeChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "OnCullingModeChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::WriteDefaultPose
// Il2CppName: WriteDefaultPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::WriteDefaultPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "WriteDefaultPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::Update)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Rebind
// Il2CppName: Rebind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::Rebind)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Rebind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::Rebind
// Il2CppName: Rebind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(bool)>(&UnityEngine::Animator::Rebind)> {
  static const MethodInfo* get() {
    static auto* writeDefaultValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "Rebind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writeDefaultValues});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ApplyBuiltinRootMotion
// Il2CppName: ApplyBuiltinRootMotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::ApplyBuiltinRootMotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ApplyBuiltinRootMotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::EvaluateController
// Il2CppName: EvaluateController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)()>(&UnityEngine::Animator::EvaluateController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "EvaluateController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::EvaluateController
// Il2CppName: EvaluateController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(float)>(&UnityEngine::Animator::EvaluateController)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "EvaluateController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetCurrentStateName
// Il2CppName: GetCurrentStateName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetCurrentStateName)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetCurrentStateName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetNextStateName
// Il2CppName: GetNextStateName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetNextStateName)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetNextStateName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetAnimatorStateName
// Il2CppName: GetAnimatorStateName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)(int, bool)>(&UnityEngine::Animator::GetAnimatorStateName)> {
  static const MethodInfo* get() {
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* current = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetAnimatorStateName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerIndex, current});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::ResolveHash
// Il2CppName: ResolveHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::ResolveHash)> {
  static const MethodInfo* get() {
    static auto* hash = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "ResolveHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hash});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetVector)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, UnityEngine::Vector3)>(&UnityEngine::Animator::SetVector)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, UnityEngine::Vector3)>(&UnityEngine::Animator::SetVector)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetQuaternion
// Il2CppName: GetQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)(::Il2CppString*)>(&UnityEngine::Animator::GetQuaternion)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetQuaternion
// Il2CppName: GetQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (UnityEngine::Animator::*)(int)>(&UnityEngine::Animator::GetQuaternion)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetQuaternion
// Il2CppName: SetQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(::Il2CppString*, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetQuaternion)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetQuaternion
// Il2CppName: SetQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, UnityEngine::Quaternion)>(&UnityEngine::Animator::SetQuaternion)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_deltaPosition_Injected
// Il2CppName: get_deltaPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_deltaPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_deltaPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_deltaRotation_Injected
// Il2CppName: get_deltaRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::get_deltaRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_deltaRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_velocity_Injected
// Il2CppName: get_velocity_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_velocity_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_velocity_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_angularVelocity_Injected
// Il2CppName: get_angularVelocity_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_angularVelocity_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_angularVelocity_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_rootPosition_Injected
// Il2CppName: get_rootPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_rootPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_rootPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_rootPosition_Injected
// Il2CppName: set_rootPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::set_rootPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_rootPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_rootRotation_Injected
// Il2CppName: get_rootRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::get_rootRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_rootRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_rootRotation_Injected
// Il2CppName: set_rootRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::set_rootRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_rootRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyPositionInternal_Injected
// Il2CppName: get_bodyPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_bodyPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyPositionInternal_Injected
// Il2CppName: set_bodyPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::set_bodyPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_bodyRotationInternal_Injected
// Il2CppName: get_bodyRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::get_bodyRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_bodyRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::set_bodyRotationInternal_Injected
// Il2CppName: set_bodyRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::set_bodyRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "set_bodyRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalPosition_Injected
// Il2CppName: GetGoalPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::GetGoalPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalPosition_Injected
// Il2CppName: SetGoalPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::SetGoalPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetGoalRotation_Injected
// Il2CppName: GetGoalRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::GetGoalRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetGoalRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetGoalRotation_Injected
// Il2CppName: SetGoalRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKGoal, ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::SetGoalRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* goal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* goalRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetGoalRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goal, goalRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::GetHintPosition_Injected
// Il2CppName: GetHintPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::GetHintPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "GetHintPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetHintPosition_Injected
// Il2CppName: SetHintPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(UnityEngine::AvatarIKHint, ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::SetHintPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* hint = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKHint")->byval_arg;
    static auto* hintPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetHintPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hint, hintPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetLookAtPositionInternal_Injected
// Il2CppName: SetLookAtPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::SetLookAtPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* lookAtPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetLookAtPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lookAtPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::SetBoneLocalRotationInternal_Injected
// Il2CppName: SetBoneLocalRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(int, ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::SetBoneLocalRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* humanBoneId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "SetBoneLocalRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanBoneId, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_pivotPosition_Injected
// Il2CppName: get_pivotPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_pivotPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_pivotPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::MatchTarget_Injected
// Il2CppName: MatchTarget_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>, ByRef<UnityEngine::Quaternion>, int, ByRef<UnityEngine::MatchTargetWeightMask>, float, float, bool)>(&UnityEngine::Animator::MatchTarget_Injected)> {
  static const MethodInfo* get() {
    static auto* matchPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* matchRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* targetBodyPart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* weightMask = &::il2cpp_utils::GetClassFromName("UnityEngine", "MatchTargetWeightMask")->this_arg;
    static auto* startNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* targetNormalizedTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* completeMatch = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "MatchTarget_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime, completeMatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_targetPosition_Injected
// Il2CppName: get_targetPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Vector3>)>(&UnityEngine::Animator::get_targetPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_targetPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::get_targetRotation_Injected
// Il2CppName: get_targetRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animator::*)(ByRef<UnityEngine::Quaternion>)>(&UnityEngine::Animator::get_targetRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animator*), "get_targetRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
