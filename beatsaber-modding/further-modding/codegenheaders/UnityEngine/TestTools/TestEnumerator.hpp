// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TestTools
namespace UnityEngine::TestTools {
}
// Forward declaring namespace: NUnit::Framework::Internal
namespace NUnit::Framework::Internal {
  // Forward declaring type: ITestExecutionContext
  class ITestExecutionContext;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.TestTools
namespace UnityEngine::TestTools {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TestTools.TestEnumerator
  // [TokenAttribute] Offset: FFFFFFFF
  class TestEnumerator : public ::Il2CppObject {
    public:
    // Nested type: UnityEngine::TestTools::TestEnumerator::$Execute$d__6
    class $Execute$d__6;
    // private readonly NUnit.Framework.Internal.ITestExecutionContext m_Context
    // Size: 0x8
    // Offset: 0x10
    NUnit::Framework::Internal::ITestExecutionContext* m_Context;
    // Field size check
    static_assert(sizeof(NUnit::Framework::Internal::ITestExecutionContext*) == 0x8);
    // Creating value type constructor for type: TestEnumerator
    TestEnumerator(NUnit::Framework::Internal::ITestExecutionContext* m_Context_ = {}) noexcept : m_Context{m_Context_} {}
    // Creating conversion operator: operator NUnit::Framework::Internal::ITestExecutionContext*
    constexpr operator NUnit::Framework::Internal::ITestExecutionContext*() const noexcept {
      return m_Context;
    }
    // Get static field: static private System.Collections.IEnumerator m_TestEnumerator
    static System::Collections::IEnumerator* _get_m_TestEnumerator();
    // Set static field: static private System.Collections.IEnumerator m_TestEnumerator
    static void _set_m_TestEnumerator(System::Collections::IEnumerator* value);
    // Get instance field reference: private readonly NUnit.Framework.Internal.ITestExecutionContext m_Context
    NUnit::Framework::Internal::ITestExecutionContext*& dyn_m_Context();
    // public System.Void .ctor(NUnit.Framework.Internal.ITestExecutionContext context, System.Collections.IEnumerator testEnumerator)
    // Offset: 0x14C9244
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestEnumerator* New_ctor(NUnit::Framework::Internal::ITestExecutionContext* context, System::Collections::IEnumerator* testEnumerator) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestEnumerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestEnumerator*, creationType>(context, testEnumerator)));
    }
    // public System.Collections.IEnumerator Execute()
    // Offset: 0x14C92B8
    System::Collections::IEnumerator* Execute();
  }; // UnityEngine.TestTools.TestEnumerator
  #pragma pack(pop)
  static check_size<sizeof(TestEnumerator), 16 + sizeof(NUnit::Framework::Internal::ITestExecutionContext*)> __UnityEngine_TestTools_TestEnumeratorSizeCheck;
  static_assert(sizeof(TestEnumerator) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TestTools::TestEnumerator*, "UnityEngine.TestTools", "TestEnumerator");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TestTools::TestEnumerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TestTools::TestEnumerator::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (UnityEngine::TestTools::TestEnumerator::*)()>(&UnityEngine::TestTools::TestEnumerator::Execute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestTools::TestEnumerator*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
