// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.AddressableAssets.Utility.SerializationUtilities
#include "UnityEngine/AddressableAssets/Utility/SerializationUtilities.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.AddressableAssets.Utility
namespace UnityEngine::AddressableAssets::Utility {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType
  // [TokenAttribute] Offset: FFFFFFFF
  struct SerializationUtilities::ObjectType/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: ObjectType
    constexpr ObjectType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType AsciiString
    static constexpr const int AsciiString = 0;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType AsciiString
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_AsciiString();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType AsciiString
    static void _set_AsciiString(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UnicodeString
    static constexpr const int UnicodeString = 1;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UnicodeString
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_UnicodeString();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UnicodeString
    static void _set_UnicodeString(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt16
    static constexpr const int UInt16 = 2;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt16
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_UInt16();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt16
    static void _set_UInt16(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt32
    static constexpr const int UInt32 = 3;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt32
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_UInt32();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType UInt32
    static void _set_UInt32(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Int32
    static constexpr const int Int32 = 4;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Int32
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_Int32();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Int32
    static void _set_Int32(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Hash128
    static constexpr const int Hash128 = 5;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Hash128
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_Hash128();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Hash128
    static void _set_Hash128(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Type
    static constexpr const int Type = 6;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Type
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_Type();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType Type
    static void _set_Type(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // static field const value: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType JsonObject
    static constexpr const int JsonObject = 7;
    // Get static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType JsonObject
    static UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType _get_JsonObject();
    // Set static field: static public UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType JsonObject
    static void _set_JsonObject(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // UnityEngine.AddressableAssets.Utility.SerializationUtilities/UnityEngine.AddressableAssets.Utility.ObjectType
  #pragma pack(pop)
  static check_size<sizeof(SerializationUtilities::ObjectType), 0 + sizeof(int)> __UnityEngine_AddressableAssets_Utility_SerializationUtilities_ObjectTypeSizeCheck;
  static_assert(sizeof(SerializationUtilities::ObjectType) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AddressableAssets::Utility::SerializationUtilities::ObjectType, "UnityEngine.AddressableAssets.Utility", "SerializationUtilities/ObjectType");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
