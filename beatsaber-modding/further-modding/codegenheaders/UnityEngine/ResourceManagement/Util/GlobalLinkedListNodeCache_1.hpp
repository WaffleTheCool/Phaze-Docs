// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: LinkedListNodeCache`1<T>
  template<typename T>
  class LinkedListNodeCache_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: LinkedListNode`1<T>
  template<typename T>
  class LinkedListNode_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ResourceManagement.Util.GlobalLinkedListNodeCache`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class GlobalLinkedListNodeCache_1 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: GlobalLinkedListNodeCache_1
    GlobalLinkedListNodeCache_1() noexcept {}
    // Autogenerated static field getter
    // Get static field: static private UnityEngine.ResourceManagement.Util.LinkedListNodeCache`1<T> m_globalCache
    static UnityEngine::ResourceManagement::Util::LinkedListNodeCache_1<T>* _get_m_globalCache() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::GlobalLinkedListNodeCache_1::_get_m_globalCache");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::Util::LinkedListNodeCache_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GlobalLinkedListNodeCache_1<T>*>::get(), "m_globalCache"));
    }
    // Autogenerated static field setter
    // Set static field: static private UnityEngine.ResourceManagement.Util.LinkedListNodeCache`1<T> m_globalCache
    static void _set_m_globalCache(UnityEngine::ResourceManagement::Util::LinkedListNodeCache_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::GlobalLinkedListNodeCache_1::_set_m_globalCache");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GlobalLinkedListNodeCache_1<T>*>::get(), "m_globalCache", value));
    }
    // static public System.Collections.Generic.LinkedListNode`1<T> Acquire(T val)
    // Offset: 0xFFFFFFFF
    static System::Collections::Generic::LinkedListNode_1<T>* Acquire(T val) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::GlobalLinkedListNodeCache_1::Acquire");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GlobalLinkedListNodeCache_1<T>*>::get(), "Acquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
      return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::LinkedListNode_1<T>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, val);
    }
    // static public System.Void Release(System.Collections.Generic.LinkedListNode`1<T> node)
    // Offset: 0xFFFFFFFF
    static void Release(System::Collections::Generic::LinkedListNode_1<T>* node) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::GlobalLinkedListNodeCache_1::Release");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<GlobalLinkedListNodeCache_1<T>*>::get(), "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, node);
    }
  }; // UnityEngine.ResourceManagement.Util.GlobalLinkedListNodeCache`1
  // Could not write size check! Type: UnityEngine.ResourceManagement.Util.GlobalLinkedListNodeCache`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(UnityEngine::ResourceManagement::Util::GlobalLinkedListNodeCache_1, "UnityEngine.ResourceManagement.Util", "GlobalLinkedListNodeCache`1");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
